{{ if .Values.kv.enabled }}
---
# ConfigMap for Redis configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: flightctl-kv-config
  namespace: {{ default .Release.Namespace .Values.global.internalNamespace }}
data:
  redis.conf: |-
    bind 0.0.0.0
    port 6379
    dir /var/lib/redis/data

    # User configuration
    aclfile /etc/redis/redis-users.acl

    # Logging
    loglevel {{ default "warning" .Values.kv.loglevel }}

    # Snapshotting configuration
    save {{ .Values.kv.save }}
    dbfilename dump.rdb

    # AOF configuration
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
---
# StatefulSet for Redis
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: flightctl-kv
  namespace: {{ default .Release.Namespace .Values.global.internalNamespace }}
  labels:
    flightctl.service: flightctl-kv
spec:
  serviceName: flightctl-kv
  replicas: 1
  selector:
    matchLabels:
      flightctl.service: flightctl-kv
  template:
    metadata:
      labels:
        flightctl.service: flightctl-kv
    spec:
      {{- if .Values.global.imagePullSecretName }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecretName }}
      {{- end }}
      initContainers:
        - name: init-flightctl-kv-acl
          image: registry.access.redhat.com/ubi9/ubi-micro
          command:
            - "/bin/sh"
            - "-c"
            - |
              echo "Generating redis-users.acl..."
              REDIS_PASS=$(cat /secret/password)
              echo "user default off" > /tmp/redis-users.acl
              echo "user flightctl on >$REDIS_PASS allcommands ~flightctl* &flightctl*" >> /tmp/redis-users.acl
          volumeMounts:
            - name: flightctl-kv-acl
              mountPath: /tmp
            - name: flightctl-kv-secret
              mountPath: /secret
              readOnly: true
      containers:
        - name: flightctl-kv
          image: {{ .Values.kv.image.image }}:{{ .Values.kv.image.tag }}
          imagePullPolicy: {{ .Values.kv.image.pullPolicy }}
          ports:
            - name: kv
              containerPort: 6379
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: flightctl-kv-secret
                  key: password
          command:
            - "redis-server"
            - "/etc/redis/redis.conf"
          volumeMounts:
            - name: flightctl-kv-data
              mountPath: /var/lib/redis/data
            - name: flightctl-kv-config
              mountPath: /etc/redis/redis.conf
              subPath: redis.conf
            - name: flightctl-kv-acl
              mountPath: /etc/redis/redis-users.acl
              subPath: redis-users.acl
          resources:
            requests:
              cpu: "1000m"
              memory: "2Gi"
      volumes:
        - name: flightctl-kv-config
          configMap:
            name: flightctl-kv-config
            defaultMode: 0644
        - name: flightctl-kv-acl
          emptyDir: {}
        - name: flightctl-kv-secret
          secret:
            secretName: flightctl-kv-secret
            defaultMode: 0400
  volumeClaimTemplates:
    - metadata:
        name: flightctl-kv-data
        annotations:
          kubernetes.io/reclaimPolicy: Delete
        {{- if .Values.global.appCode }}
        labels:
          paas.redhat.com/appcode: {{ .Values.global.appCode }}
        {{- end }}
      spec:
        storageClassName: {{ .Values.global.storageClassName }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
{{ end }}
