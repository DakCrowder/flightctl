// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+y9i3LcNpYw/CrY3q2yPdtq2U5mKqOq1Kwi2Y42vuiX5EztRv4naBLdjREb5ACg5E7K",
	"Vf87/G/4PclXOAcgQRK8tNySY5u7VROriTvOOTj38/skStdZKpjQanLw+0RFK7am8M/DuUqTXLNTqlfm",
	"75ipSPJM81RMDiZnLJNMmW6ECkJtW7LgCSMZ1avZZDrJZJoxqTmD8bLgOBcrVvY2TYhOCcVxUkH0ihG1",
	"UZqtZ+R1qhnRK6oJFRvC3nOluVhi0xueJGTOSHrN5I3kWjNhVsDe03WWsMnBZP+ayv0kXe7TLJsl6XIy",
	"nehNZr4oLblYTj58KH5J5/9kkZ58mE4Os+wCfgst27Qm6QLWSLMs4RE1X2Feka8nB7/g4So2eVefbTp5",
	"v2ca7V1TKejanNAvbrYj1wkX4MY9SoVmQpu10CR5s5gc/PL75D8kW0wOJv++X17jvr3D/ec8Ya7Th2l3",
	"2zOWUM2v8bJNY8n+lXPJYrMuuLl3jeOpre+ZuP6ZSrzqysWz8gONY27a0uS00qR2FdPaaT8T11ymYs2E",
	"JtdUcjpPGLlim71rmuQGbLhUU8KFWReLSZybYYjMheZrNiPmsq7YhlARE+zBaLQi61xpAzNzpm8YE+QJ",
	"NHj6529ItKKSRppJNZs0tt0CJ+4YTmV6zWMmzzMWDb+rwDmaW6geJC2hsWcsaPZhOjGg1YJz5YTEtCpO",
	"48n/+f/+/+oZkCQVyylRmkpNbrheEUoSpjWTJJVE5Os5k1M4uygVmnJBREpuVlwzldGIzQah2u+TVLAB",
	"B3WypkvWdtx9UH4iEi7ae7/78K77bs811bkKUwT8ZugBJYqLZVI9Y0vLYnbN8UgciTiVLKOWJpybI8Z/",
	"nuVC4L+eSZnKyXTyVlyJ9EZMphNDIBKmWTycrlR34M/Z+OgtovGtXFXjk1tm40O57sYnbyPVg/45TXKE",
	"3BJ9qsd9zBZcMEUoQG9MrqEHyRWLyXwDb1KVJFdRKYwYbwX/V84QHyxh98c1sM9FiN434dunnzDZu4+E",
	"eTySBsCGzq1Ogqpbxx2p5u5fcqUBfj2wtY3NHrlmazWA9tTusMR1KiXd9NJP7Ibw0Y1lO7ny1427Dtyn",
	"uc4Fk0xELMQJ2U+Gc0Ecz5J0w2Ly5uhkz5xRwqnQhJtbNBTToNeCRprMaXRlHqrOuUOw5K+nh2Sp83y9",
	"pnIzkHQliX+Iqp1s/choolebyXRyzJaSxiwOkKqtyVN1teUcrU28yVvbBChTtUGxXHN0uV4dpWLBl81z",
	"Mt/MG7fgyyZ40VyvwscL3cw5BCHL9Ht79rKl29uzl/0wUUxdjhaCih+ojgIcOPxMOPDxLGHAZHFB5vCz",
	"Yv/KDZg195vwNddh3mJN3/N1vrasgQH5jMmICQ0IsLDQpAy+5FlMNSOWqsKcZqphdPG0GBWI6ZoLM+3k",
	"4EmxeS40WzKJvKpiCYt0Kvto2Es6Z8m5a2w65lHElLpYSaZWaRL3DeCv60PbRZzbk225EPeZxPahM+eT",
	"WAoN54QHOGeEvWdRbvheLjruS7XOd1gdF2cENn043UfY+jA1l3CCHZ7UCf/UwC/VbLnpG+0sTZI01+eu",
	"eR3gi3FCYH5k9rwwiM7O+dKwK2dm6yoArK1NifTEWyLtjwtDvIniS8FiEpV9yUKma7igo8MAYcj4z0wq",
	"mLFx9Kcn9lvlnq/xNxYTPBF8oLgql2WZyoVBWtz6jJwzaToStUrzBJjxaybNVqJ0KfhvxWjKPVQJ1WZb",
	"BkmkoAnKRsjJr+mGSGbGJbnwRoAmakZepdJg7SI9ICutM3Wwv7/kenb1nZrx1FzpOhdcb/aNRCD5PNep",
	"VPsxu2bJvuLLPSojIx9EOpdsn2Z8DxYrEObW8b9LptJcRkwFSeYVF3HzLH/iIgYyRrClFfWKI3Mv7dmz",
	"8wviJsBjxRP0Lr08THMQXCyYxJbFTTMRZykXGv6IEm6opsrna66VgxdzzjNyRIVIQbJCWhfPyIkgR3TN",
	"kiOq2J0fpTk9tWeOLHyYa6ZpTDXtw8k3cEavmKaAyZa17OrRil1WVpuogsm73TDYvfEalvhmQcXbpF35",
	"VnTD8MVb0A5gowEOHVltbToSi7snFsXzFRZ2Ou9m0NPX/t58aL6AI+n6BKTL3DUSru1IBV7/VrTCidzV",
	"+/27pFnGjOSX5iIm1Misci+SzBwqOTo/m5J1GrOExUbgusrnTAqmmSI8hcOkGZ95/IaaXT+ZdS6hSVjY",
	"+4xLVL2wKBWxCgmy0B8VqAXNuKYJj7neAPcDEFNObKZZpHJNNfLa3zydNFnv6YS915J2qX8LPGtccR1/",
	"anphMzChGoGLKSfIm+NFS4E7Y2DOzDlnaZYn8NN8A78enp4QBRhjzh7am50busbX61zTecICWmAEpCBX",
	"eQGSjGJ/+XaPiSiNWUxOn70q//3T0fm/P3lsljMjrxwnv2LEvEyzgtfkLAGOnvrw0MWwIlWoXMl8o1kI",
	"cYCFla+DCpETESOQwZpkARPYBwk+kKp/5TThC85i0JcFETTnAWL39uT4Hu7JW4Siy5C66y38DqdutgHU",
	"l8GbcMU2BHt5+7ciKlcqr3L/lYeiF4DNlvs1UfdwMDVS6KC5Ahzbkb4WlV0JUDTLZHpNk/2YCU6T/QXl",
	"SS4ZUYX+qdilZ01QLedO+KI0BKomxfOahnHUDtmU56blwZHUyODFmQ/CLkNeUXwOcI3FN9SzmZtNfUyb",
	"kZ9EeiNI5DWUjBzC0bF4So6Z4Oa/5oSeU57gooZxKm7MoFLWhwZvC0EYKAZq32B5fTHTlCcKHpBUMEIN",
	"yml33VEuJXAg2typ410NUJ95JK2me6JKX0gqFMx0wduMXKYd0XzNcKZiabroy2Lki8y6LBjqlFCR6hWT",
	"lds2DNCeGSvMiShDL5qr+DFfU0EkozFAk21HOOKE4evc6dB5mmu74mJ5QYKWzgHd4xdMMHynw7ufOVZm",
	"tixaIlGpnsYNVUD5zJsVkzzDaf13/S/fBt91yagKCirk4VxytnhEsEXJOrg5H6hBOx0oILpRnUDoRhrY",
	"DY2lNQzQqE+1K5iGQK44gPL+O5Gl36ZROaMpAGW6IBfSCFrPaaLYlFhdta+KN98n0wk02Fr5XludHav2",
	"qxu69rOvN6+eZhMera9ECXXclyS83ThKhwp790+kerBLQ/LMR9DJ8nnC6n84unFKpYKm5xsRwT9+Nrys",
	"aYH6xRNxKtOlZMpc8Fsj4lgzbMYi1/RVnmieJezNjWBSwUquecSOmZFuuDKyg+k07LCfCZkmyZoJbd9M",
	"b4et7+qQNsXxtLYozu2MZaniOpWb4KGZs2r90DhZ/2Nxys8TxrQ7P/gjdN54jt6p4w/+2eMvQ28AgXDB",
	"l3Xz5zBjwguuA937PAp+KnjzcxZJpm/hjnCLWX/UOgt1gzPIcncrr1JhLrrpiVJ9TdfYrN/RqdQ8pMR2",
	"6mcs/dGDNvBut6TmTnCXMhXP3mcGlsJsiEwFYUUDgq8ZPERm7DhPQKfC10zNLoXZpG3BFfn1T8T+/68H",
	"ZI+84sLIlgfk1z/9StZWXnu89+e/zsge+THNZePT02/Mp2O6MYf2KhV6VW3xZO+bJ6ZF8NOTp17nvzN2",
	"VR/9L7NLcZ5nWSqNEGAukurULGLPNDwoRErDG6Me6SGbLWdTGIYLsjJLLsZj10xu4LdHZt5f9349IGdU",
	"LMtej/e++xUO7slTcvjK3P135PAVtp7+ekBAk+YaP5k+eWpbKw086pOnekXWcIbYZ//XA3KuWVYua9/1",
	"wcXUe5yjN011L9+VR2Jeze+8LpfiGbr9mZMjj/e+mz75y97Tb+yVBhmNo1zpdI2E5UQs0i5lRZ3XAV0O",
	"KmRjEsFAxCKYvYDglHVh1BuECwRGEOOALaza4BssBi68uTj8vWrMylYbxSOaeOONKujRXjXaq/ZLBmS4",
	"7GH73MIS9a4Vjxtuck0frrAGqSZs+m5s3f5qIMnEm/Dr77w4Fk6iN2B2s+LRCjQT0JMMcosz04AXaYCO",
	"vi5mcW2Ik3ML8TE8uieQDruzsEPnh2m7Z1wpodkmhdMZIFltXbdzlKsLry2amcL/y9yXd6DF5gfBVdX/",
	"KfSqKWzg4GcFrlg178CAe1gVTLl9SjvB1H/tUBniKB+oCHxvxJ2oC7qd45quJj2ninx420EeedqtUsbH",
	"82p1JZNMxEyyuPUZPrMN3MPbOm6fzrc6T+cmVZq0chj2s89oWFUG/BylQrDISv3FZYdclIBZPzkOEyL7",
	"mZwc+wql2gxhwMCer7ynowbvBa9XzOIItSNtZt3WOPB9JewgogJeS4W6XHCdogn/DZWORZAIk2suaDIt",
	"1ozOW6bblDAdtV0Xjd+IZDM50DJnNdCs7WrqHWD7Vfpyc/Mg3GCW76QOpOKqtF1oqxt3qKlcMj3s2fSX",
	"cgH9wqo4HHLYlrxxmmS8MPUgsigzQ2Nra6ZXaVxFKV9B9VYwUOOAMirSqdycMVVZX5cKqGvF3shdzaqz",
	"FqdwYt5ByXUrUbfErkaLuOvW3PFHEvNSdAFCXk60EzIe3LTd4u0oecdYPTrbjjMswjyoUlUFZhkX8VYo",
	"J89vBUW1BRdTBL8W8wa/lotp+eytsDiwl3zBok2UsB/T9Mqdk9vwD2yRSl+/d7jQTHp/Y4MzNk9Tv0X5",
	"wzZHUVlKY+pAm/pqWofxF9g2jrfm5uHcijVIXO+d4mF9cDv3R2Nhba+3Q7/QIG1454dehk6spNUOrFH1",
	"bhGgqjmu/rIlDtZWXcej2ufKKgLfQ0vraVbDyJBDSvmt6peIv6tRBfTJvRC9mxgkPVqF3+hg+EdzMJxO",
	"rOA87AYdk7E7z8SQzeyYaQiMPkZXg6Y6CcXufgMQtgPpK+amkRFpdCpJlsssVQjAjvZ2raRJYs1pUx2t",
	"uFiCybADWRbmO2i3FLozQMca3zXUI6t27t5JNBY09LjPmEqT647jpgp9jqB5+MRxj64hoYqkpjF5KPIk",
	"IXxBRIq/PDKbNT+aZ99JiQFjwz1dsNt78IIzya55mqtX21y0vWPXN9lYu098ywsHnVma5O2+Cj+mN065",
	"sEh4pMFBRtqN+QeAhinYzWQ6eZ26f8G+jllLiHYnyNXW1g5yb1TY1dj/SvDT3D7RKEeTN+eF+qRV1FsH",
	"nZkuKoNgPCsqmeWwQEUct3NTt2GW35wP3sLPVYWZ20b4zTZfjvmy1ck3hm/1sdBESdSKPv3zXw7o49ls",
	"9mjo0VQn7TgoQLYVz45WVCw/DWWvryGI8oLddFA5wW4sXUN6V1A3ydbpNYuHETdHGjomck3Cs4lUsCFT",
	"tSNu+00VHjJbAXbBTPYpZaIsH8ZpVNfhLB4xV1cf03/N1ulQXic0Qt3tNMsnxaB2dUOPthvGVcV/BQ+7",
	"CtRlsPnfqbTC15Hkmkc0uXVoe2ihfuR882s5eeirt6DQZ7fI0DffWc+zdLY8ILXng3Z4C5TWlGEpJTLr",
	"snSrpBI1N6nG2x61hO67heD3W6wh6KUVml6lSciEeOGFb9NI8+vSeGG19ttKf84mE4ySqaoRttbGg5vx",
	"wHVYTsQyVkC1AloDs7QKDlq/MHsjNuBo+BnUPMNCp4B5w+IWYxJ+hMgJl4zA82mrecgZxu6Uas2kUF0B",
	"9CiJZLZlZTMNAyt6Nbl1GDkWmKkpplhKJfw3zY3ovFjw91OC0ecrliR7Sm8SRpZJOneTwfphdrqkXCjt",
	"HOuTDUlSGjOcAta0pu9fMrHUq8nB0z//ZTqxQ0wOJv/vL4/3/kr3fjvc+9+Dy8u9f8wu4f9+ubx892+X",
	"l3uXl3+6vPzbu/98+F/D2j3628PLy9kv2DD0+T9CfFd/uhjUFpymCY8GPj5vvR4Irh9a35W2p9r/6ps6",
	"w7pW5WWqscST2L5rCjYQnqBXQ6RzmpTxDx9Lay1T7JPcUs27BX1puqEEcIw2jelbj15zRhgeQVPcAZwj",
	"uos4xwRzjsHwEhqSGW8ZNeO/N4MIdukpYOQLZ2O5lanLjJBQpc8ZE0OiXyxYYLAHEy56zNK/4aEuhZ79",
	"VqaBLR+Wok/ladmW19xaLdcASKTSzjN0wABl+4JcxdtQqrjFpczDjMqqqpg4CSOmf4w++BVgDHdTrrc8",
	"NQ/UfAho581v71/kweqKyviGSgbqfXR05mJpn0xSUbjv3u/IrsEFhe3OZL0Dn6OtcnqF7dFvIPYgnL7L",
	"N3mepjdMsvjNYnFL4aeyVm/WxjdvIYGvVdGm8qlpoa18ruwg8D0gGFWwfZgf+JvM+Q8hdHpB6ex9lqoy",
	"XpcumdCzS/GMRisINY5SKZnKUhFj8GHJEiOYWlNXRDM65wnXm9ml6Pcox01UoDxKkwQzpBammlZWwyyy",
	"1QZoXpfDJWRjxSbhzGae9aVlDK+Fec0xpMGeU8PfvRzZ3HfIS+yHNNXk5HibodBhfwhlb8QImKfMESU8",
	"7fAu3xSU69xRroHLqxuF/AMtTqG5imn1+trpSIMr7nGZyqAlaAnXVNAlxq8CncQ3A7LwRkkemy83Kybc",
	"787CO2ckTm+ElUgMXbdh0E0QdO3OMV6nl9/AzRSti3f3tv0/9BxbfCtdNa5p995VleF3+VxVNnu756o5",
	"xBZ+HeWBFU4d2UV6TCH2/k2u3yzsvz1nntu8U5VFelMEvvqzBjvXvIqqXxvPjS849bBJLnOi80kFPbZk",
	"OpeCxYhwC4bGtTINMZijOqXJEpLbHrsB0eAxW9A80ZOD3xtv0SGZS0avDEZ37mS+IZf+ui4nTQ+lErhU",
	"ncf8Ayzerql74TrVNGnRVZtPXshFaKaB0fmW+v2RTscKFl2nU/f9haOaBoC1fv+1DQepEVdXvbGxW4ej",
	"Tv9g8bTBB9wqguDlxgHg7ebqCjPdbFOuIeYSUqNuinoNTpdrzYfemN176SgscMyVzGHWH/LYepTX1HG1",
	"FtVMqeyaJTajcXrDYrMs2xrJpMSQdMIBTjMbl948hqVM8+yHTbu6LaFzlhg+Hpj3jEkIFIBuUJ3CmdrL",
	"+eew3Ir+ydPAPvzlcO9/6d5vj/f++u6XveLf/9ifvfvTo795HwfoTkHV+1bQa8qtXTOYrhfz5npUx90R",
	"KXoWSO1qK+DxgTa5I+0ufD3smb6WLXhBctGct7jHreYP8nC5nzTFErbJY0NB2hdXZERz6yhi0jCuRack",
	"ssnssd5E0aFkfF2mKXDnoQTSMPBr6z3ODPbYsecbQlFxlwuuZ6SM9i5+hKxAB+RXhYHTCnO6Tcmva/wB",
	"Y6HNDyv8AaK+Abw9UPvbwS9P9v767vIy/tOjv11exr+o9SoMV89ElBqmfkhgBbNtkc5BXAwQBqppzRvU",
	"5+qyhHIj1mLmtMEJNXCqU9vZ/f2DHeTD1Mu5Uab1rtcncS32rDa0jzMuxzy3HeqULTBm6EVqJARpnm2j",
	"SUduYptfy0AjLqDTmDD6+I5h3l9hmHcDobaL+G52320a4pYcQSGBobVpmXstrDEoCIVnDyMlyWqP7qMu",
	"F1FHlr+bFdMrJv2kdmRFFZkzJogbwLvzeZomjAq0Z81Z8jGFog5dCkccCdSpWZZsytIcLTk0Gpdn97nV",
	"DXmy1iBxov2qm3x8z6R9N+5Zoz/27g9bvCGBN6Hapgbwb/+GqsrFDzM0uh4/tOUlqKY3MG0HiE/eqFN/",
	"SwEpZLrlFdzCJSBw8MUFzYKwFo7wCTarBvs0mowswScP+wneySCnhCbjOMYCfanJxsMMSz8NAB9Ojs6b",
	"RUOkPo22D5Tz7AdHmYCjsWpxrQ6ltvaz9CpMQ+i/K4FHvOp3NTzjzl3wDC5DqhXcsLaox0ZwVTjTrJgg",
	"BpI9Ms5ViMlp4TPMqQ678hZbU0vD7d6iQU9DyYTeiqXxnLv68jL7ENVMzjzbOuVyM8Ew+wjKu7Mkyk0l",
	"Qsft2iZdbN4qvbFqKEMIAfdssc7nCV+uNDkyhDFNfGD1vL+a1cwMcYwKVdlW+pDDHMrI+mqQnO+5tyB8",
	"7W/PXrrbeXtSYiGYskmu0EU3k+4t+X/OiAER4AESLq4wgSDM516wDrP/bRU9bfqe2nmVE7SewSCQgHPs",
	"BwtXmK5Ml25f2uqyKkCDxaxuARo49J6HknvhpDpH0NDLSHtMNS2X6aM56AaBZ6Bu6WZ8rO1sVnrx8jyM",
	"+LiYK7bpXMRPbLPV5Fds0zd3HdlbTqW5xEEXP5wkDKAMLjuSQYv0lpfu7csAVSq5bj3ysu2ha9p++j6v",
	"UIxMKtVO2hA4FO2F/Kh5hYF4xLFkqvDB6N04eehYy1WqtJEwD7JU6gHxex0HVCw2ePPXtqZ3jf66QoXd",
	"ci/UiQD9Py4fqabkyyWkBwMG3EyANglk9F2p9EyyBX+P5gbGQWVjhjsgD8FeAJ4n5gf1yJvBfqW5TtdQ",
	"hMLFTzwKu4CNEuWOJcq4jPTsfLjMiC4qFHzNryF8GdWlw5SqRWHbUZbcuSzZUi7iEPFur/D4qkluVc4d",
	"zzGzpR12qEZvL+ygVqnUU7Km0YoLVq7TXj/Qn2rUea0EBJIjz+7nfCqOsNCNl1T+yJay8VLX44e3hX96",
	"9ZdGQxeDX/vFH7MZ+9byc63H0enbRjDm0enbevjm0enb1+Y1Lhu9gujWRl/8ud4df62NcMzVVaO/+bHe",
	"2/xW6+uF3VQ9qr0PDUds71s9ePWYK8td+LnFAi7ZR41W5hVmQjdc7ezvTSe7okPhXtdVT6FVEq1dZEuC",
	"ku7UHh3lCswvJ+La/nZi35cLqq7sxKEweQTOQUT9HJt6RU7aHYy89/8N1hJBcJgSCyo+IhaQ4sDoXb8u",
	"vVujVX1zAuVSpkWZFdzU1PI9rYySl+egxhZfg6ndOju5ojpTQ5dyINOxLW+TCjyRoiB3Jd0BBntmmQ2a",
	"7YSQTv1UdwKeHuDaYuR6rpm2BBE9kVYt6SSC8NtazKLeshylTrh73OtsM499cfn0sWSdn3nhw9Bi4a2D",
	"DwpFazmgYb27geE2Y9Svvb/SSNvlfHi3VVILwLMWG5T7VLM7XQNzNxqbPrmxqbiIYRYmEExHq9IXa1Xy",
	"mIkgE1GsArl6QDOVpQIKQzX5+Zq+yHXu12FsOU+PGqaYN7Tn5zxxXGTbnuEjmkUWPJR+NerqD06MRLP3",
	"mjx8e/F87zvQndSKwXqTgH88T1qNGqad82ns11V7LppBz1ez/fYc6OZrkfW8xRG6JVkdT9gDhT7PU8/N",
	"1WqVwNvV5QkT+ZpJHpGT4xk5Ru9bILyXE5mm+nISxpI0Zp1TZ0xaMQ0KKc/I/6Q5EA9cDIbZrQ2qL+ia",
	"J5xKkkaaJs5CkjAKHqu/MZm6EkOP//Ltt3B9FE2oEV/bDpgZPdTn26ePHxnqpXMe7yuml+Y/mkdXGzK3",
	"TrukyKQ8IycLYqhTcWJTjLKrbgZQwOxTkdg7MLO8cBWMXLVmFcTTgiRYd3BRbTD3JvPqVDpxIyrkfZvs",
	"yws8H+b8Wxm6VB9Ufj4rxq787BjRd3aF24WB+GSkj/Oq4Fxf48M5ZP9jpxTMZ783gyUKqtASNgGxXgHc",
	"toFinuOwNXrHYw7g0T949A/2MdbgynY+wdhlt37AMGZY0io+VSUtTKc6YvInl7TKixgkaSHNHiWtL1XS",
	"8kvgtvlxNdts58JlI8HLqLia0II+UD9AguIgaziH3HE2Bq9MHTdnLtqOxcQOPSTIriSi4a12+CbCVnr9",
	"Ee1Wh+WAO6s0Bu+BhDkLeycw0DlLzl1js1G2zpJWzzX3tZZguRm+XQsYvpeShvWsDeGHpx5/7fbbCtid",
	"EH1rUB6cKw9aTwkDYYYmyYbwMmreQ40VvWYgbIETCiTBAZmQCrpkFRcQLgglN6s24X87P8Pixj8+1Vzc",
	"SBaxTX2BqcOYQa9RlVpt6dj4ggkjOZ6xLC3kqqBr7gJK2tcLiA0o3e+GdhaAXLakU3iYpVDIfAMZpTV7",
	"BLl3sPz5sJTlZmjbJrjXYNXwhjvPkuszs53QGqVzs0DnrBdcV3OiEvQe2iZC38Xluyz2fOkoUFn9vaU+",
	"p/vcr7crhyq4jOCYSMfP2DVvTyYl7Vez6Fyxkv3oXG+jnGGx+Mas07ZcA9OWWqpNLWUlcXD/amyhTnvz",
	"oYmhfFTk9CJt1dn5ojMHJhbAyBVwXmumA4Hpc0bYexblGj3SB1Eis7ZOaqT5mllq8plFzZMH6kE1aP7B",
	"+kE1aN4IIA9WDz4+cP5DKEHHMHtlCR1nuZh8eAfqneqPgUj265+p/JhgiGfimstUwIN4TSUH554rttmr",
	"lLzk4p+YR85lY8iFOeNgshuZi1b7wtocdBVC/QRiVGwIlct8DZxDriD5o6YipjLGRMhEbYSm7w3wGKGF",
	"syR2+lVF1tZk6mZSJOMZFOlcQoTq1EAUB/TekBsmy0WQXMRMEkrmVK3IXoQq+/fh4JWbVF4d8xaNq/mI",
	"mVZczpSy7KdNRJIL4UQ2u9ABpC4XrSSlRNuDbWCt6HZK9epN1qurrPR59t4weJg5vHddXuOmPkIQVnz2",
	"iBsz8AeZzVKiZc7M1RVsSJjm2VQsLA7eWmjLDXxKWwwehc/dQ/WImPlBO081GHtYYuvH4CtstqCo5spa",
	"IeDXYunDlQQVPXqAILdzA9RqlQu2AE1bBJL1FGBZHDVwyhH6OXzkMYfS/UzNqQZhROusTNHRyTE2XkOP",
	"WzKL/PHi4hRz4BlKEGDj6SySgbcL04YQZ6iTaarJ0WEQfjKq1E0q4zYGDL8S6yy9QkNTc11FKHQxXsg7",
	"7IpnqKf5mckimVPA9/2KZ5bRtUwjufY6hGPudaIGHcbFy3OMyXDmwUFLN6Nfsc3w0a/YZvjg6VVb7mv4",
	"tJvTzxWT7Tyi+9o71wBbWYkB3dLESutsoDghcCXDBApDFU6DZMT86kQIlEMfKCQiNt2tTr24f2fgLhIT",
	"2jynsBTFDFyW/N2N5Foz8dHiiGyKI06aoKjUVhsRkQ5BBesshDYvC2P927OXSCqjdG1I/kLbTBdzquDr",
	"jJxoKAmObAwj/8oZZEqTdM00aMfzaEWoOiCXk31DEfd1uu+0rH+D1t9D6zYTa6vIU1zf/Us5DiLb6Pot",
	"dQGrypPQyY2ULT3P2J3oEABq4d5TEtEkMe9mlKQCpdQgJIH3LyYrbIEpMx7CG7KCqUgwr67ratjfKGKq",
	"sJWUVz0jbxWo7CGYyQC4g0xkgEFOgrfLrtrxm/ONu2BXXcrchWGqYSVMWT4aIoRWLMmQlmkMHbI7KjK2",
	"a50V1oGt9ChT/15DEHOypkvWVvRnsJXeG+DnNMnXrFa85/dhFePOfHrqqBvlgklb7q3givwaRzS6GpQB",
	"sa0iXuuxnOZJUiq9y/x1J4vXqT5FLWsjk51LTl715Hjg93kwI3834ohiGr4dJjd0ox6gRwpulCuS5WAI",
	"MCR8A2J1rddr86XSCVhKmkhG4w1h78FCJlpy0uOck2l9MzDqQKcQcz7FOOaP2ljmJzueO9IAdBy0Aken",
	"l205mvPSH1wAsdk3UH/Gj6uxTxxaYN8cneyBJoVToe3JG35Ear6gUYADzipg1LspD+pgRy4wrBtb+heG",
	"ynbJllxpQ9iA/KzpxpAs2sA001GkmFzKRji8OTopBgN5PkkN5VTEalFTuS4oqGmLAyk/KeqQV9btN3hz",
	"UNPg/skVllLoKEblEyTLkt2m5Frp6dSd7sAuaCAtg8ZDmN3+faL0bV5n8AFr0pfBAnZbWbe7ZZ5aDy4U",
	"fnG/lT4Hhi8xKVP5qi2o0cwOLYiN+3ERgk7ttaA8ySVrEQG03Bylecjj9nWRMdY8Ra7Irboq082Z3ryi",
	"mvD8JE3T04Iv/wilaTkIEYzFoGKEqTfFksJ5wKm66r+wwjsGtgbCxwKuoh/AKqWFi9lq9xWCu5/yOZOC",
	"aabOWSSZ7kbRXaHHdKJgtqGmsnKVBDsGTOsGcm4p01Zy2eEEntwKI7coF4cdSLnm4AAqo1HHKPC5d6gw",
	"xSmHn3on1OsMYHuXlxQCHXCZCPutlSQ75kpzEWmbc2lKblagf6fRinAoW6MIKmc0KiEvJ1ds8z0YIS4n",
	"WP+GvafrLGGYbbewWnyfyTTOI5uFxXAWqfg+V3uMKr33xBwQZ/L7OY2umABiNrxueNUZJLQ7SAXufEus",
	"cx78hkqA9BqMCtbztnQxIwjbKk/KIpIvMRkVusLpaFUqzdGIdfj6mMUz8myd6c0+FDKuzq5sNUjDL9lA",
	"z0BNS2/UvvfxVb29q9j/8uMTcK1pZjb++xXbTOGOP6ClKZxAqwlyzmUr6JFnvngx6c7ZxmrmN0KvmOaR",
	"V3K50IL7tigDuXgd11RCKWnnswLLUDNy6NU2pRtUo4NYn2Lo7e+l+86UuIV9CAeYcJEHUP8VMsYGfriX",
	"/8P8TUnC17yQrcpc6gDehSYOTZu8yNVayXXGJDycECYBJ1RkYffTh0DKAfqvnBVumk69oFPClYIPyKS7",
	"jJaW//ZcCSm624ATDldIFuybydk1KjQEe68drpT54IvjPsJjwkonUSoUV6B0hLHMsqw3ovUAYe7I7E6r",
	"GlGzb2fygBIJEnKpGOFkwW6cYRjvNKNKGdS78Op0Ox9aVMBUC7Kg3RL26a62lomFx5ijKXEnZU/aOo1x",
	"CUm/ISaKTUkuEqYU2aQ5rkeyiPHiKK3iG7IZiSrb1cJfrSkXXCxPNFu38FkXFYhS+VyZizXyHACXXScc",
	"PD6YhkCZ47c60BibuIt2W4H4l6KnAxYn9MWWoEHwC9h1HWUD9UIdzot9uEUpkmOlHYBTPEgzjDv0hC00",
	"yQUgj4hJuubas2grJjlN+G8oIVYWCveITgvkoY2cmbOI5ooZqZMrdDNb5QIsv2n5FY7AZiaCok3Q6FG5",
	"H8ns0SEE1veEGykM3bfaifP3TZMYNNdUkOsnsyd/JnGKsUhMe3MglBsOVEAFYeWp2+twY3b2J6Y0X4P6",
	"8k+Ibfw366hni8/BIjApV+EobuaVDChl29ioxQRqIAuPAavZ6C1gE3ozas9Zk6kNWq2wrKot+OFTT/vk",
	"YzEzcIgOIRvajdsSOxVW5TJtNRAQeGVryRpODHfzOtXw32fvzeM0mU6OU6Zepxr+Dgpq6D3fXZ0c2xT1",
	"pCsCdH+tZp9fNEfobfpd89gHFNMu3QGGe9TXLxfrkJxg1ydNzg7TrPSWBvpDlfnZuk6ROX7Pg7hZwbL4",
	"ZjC5yibRJCGZeeOUoSxBVgkpv6X4UK/FvdWYRQzbooomEKMiRKrLyta3FcSLxkAqmiWOG2QgsjmGLvia",
	"KU3XWUducywyDREUN4ZfwIjD4QnNY5t7aNu5LJmPMZnR8PmWTDDZ4ipwSPANj4o3tBI/QgsVKSlHKet7",
	"KSgOhJ755DTN8oR65SxRfJ6RM0bjPcMBDyxY9tGZfF+hGGHDYqAkEzLsSNDAbEuFz6+mckmFeaJMO8MS",
	"L1Np/nyoojTDX5G2PyoYz8mtjas2TCr4MNwIFhQpvfgdqkl6Ax6fGCIPvxsRxQjHXMT7Zq7LiZWbW5i9",
	"CrsadL+yzL2f0Av506K+D3LQD5QXt2XZ30o42DCfh3qqueAZVLQ+vrNx7cke46V2Fy81DKaLu4k7r73C",
	"FWDoFIwfUiC9QZwsCNcYzHjHGSW5yhJqUyv1FKCFq1crI1Whb41sCZBs8YvLBTfEpSAosrCep96tV96L",
	"POfxGE19p8g+INAR7sCHlD7MDWuA6y2qAcz+1zGO+dPHMTfuY5DwVaHfY1TzlxrVfGpkbK9qYQEbW/j3",
	"9frXeyVVfe0HjTFvTJagDQszyAQ1HmG3+EPy3+dvXpPTFFAWHOPbHPnyFi4I4dNwpDHojO1qZo0TTrOu",
	"6LM6dpwyGRmyFDKkl9+cFtHiCj6WVWTJysbYKrjBM5ZQza9b3H7PqpUmsSnaSN2RDQlJPAz0dbo+Jyy+",
	"TrUVcqiwjmKwM9PeScDpNZOeu3BhAJwoGe1zEbP3s3+qYWJHxfsztO/iqztqP6eqrEQlOqhccm19G4OQ",
	"eNbhzFyJpfTO/AXXvmMzOEChQ6rveTk+k2PinjFxz36JRNtl7/H67TaFTzlwmBuufq/ywsU3Pibn+gOw",
	"wrJ2HYM4YY/ij3zwl8oH16hOB5JDzpvSEYXWfBCqTMWwwN16qo3eoF0/Fqev8blalW17tt6SBKbeYrtM",
	"MNUT+chMLNXB7rfUm7PHHSZM6rM8YSH3XW8HtykLQs3YYQVf3mYFOnaw53hcvkYu23N8pNdMGiEiV1bu",
	"SOfWdWfOFgbpYWIjX5DncJ8H3Tka+rMvdGVeuLyM/7Mt2cJ0knUITxeYWdXJROnC7sgvmaSCJ4kGMnRP",
	"vWaS6/58U/59n9tORV7eShYmN6J3TZV9VG1cvcBVmSxQHAu/NmDGiTBlBRGvwMiJWKQDo29a11IO3NrE",
	"m7G1DS7F2/RPwUf0rHgXzbNB2PssVYbR4BS2fXh64m/aq1d2jsVKnVojUEWkqLAwcclWK5JdubLzjYgm",
	"08mFTaDlHpewZFgx18N+OqpSHJ2+baVYWR6y/U8nx1xdtaaK4uoq3Av9Ilq9LFq9JpoVG3x3hsElG1p2",
	"0/duda2rJ2lWy0nUiyRUnDOaFxhmBM79oCOkeNgcDe7tZk3qXo2Qt4x5juC1TIAvN61m5I1zO8VfM3AS",
	"tajPlcvGswUfW3++Auysouss4WIJISO2UmzLazNn+oYx4fZPoKtZ9z08IEXeno6UPW1XPfWvIrDjLuoM",
	"5KCVUJmvVc1PxegNHsTWLRWjnWzcXKEZ0imGt4MTrSV+IP3x0ZgyaolGLVGTmBmU21ZP5PXctaaoHNrp",
	"ikZ8/cQaH9t5I6KtX0qg9qPO58vV+dRoSOfDXtP7uJovD9Wj4tm21ae7FB492T6LijXVtF5cNJKHnJiW",
	"RQvM1VB2KNFeUy4wgCnEUWBqEJEa0HG9ucHpZzRa2TDK6lDoOuoGMAv22ZpuXL3fREBDMpY6J9gic2nz",
	"pO8qYWngHeqGv1uo3vz+H6l8o7cjpZ3ZR50O6ihdr7lui9OAaCLTgKyosqn4bqiC+2+J3HUDv+jwnS4G",
	"91yjA2MPCUu5hQ6xVr/wfvIA1As4hrQYgt28CbsxA4ayG6w7RB7yIjXFPGFQN1zkCUT3TQ60zFlIsWfQ",
	"LM1VxwSuyUfMYp+555wlcQdnAJFR1p8c0obafiUJKGlLAeruJNHTu3B2b/CEA0NrKpH91XUHgQfzedt0",
	"8MwGYnWlmFmlN/A6QdsiobqBFq/IQJeWCmoNnNsggzYkrzZqqo2UllSz5Wa4zqg2Ysdh+FmUKqTT/+w0",
	"43bTJMNf69nd6ygISZYQWS7KRMmdqqe8TO0ZN69pQHWD+uWia6/MYV8/5PGS9S+i3h6y4kEasouVZGqV",
	"JnHfGJ4DU9jzxqWWtzcbRGZ37+ago1XKI0yzhQdjgdI+utWb8YlWFRRCKHauVjvKOHp+/mNXwtFM8muq",
	"2U9sc0qVylaSKtaeORS/o5JLrU6Lvn+MhKGVJfUm9rQ7hwMantszBDi+OXI7N0PlX3OPxfOOkgia7dec",
	"uVxKwa5Ugl1J9MpdhYhcG2NomUGOOkadS2GlTQNtEU0S+7DFqXjgMngSDOf3IqBG3cTd6iaiYMHL83y5",
	"ZBCBCS6A9nIiVyMSzg+Z+Cl5TPjCBXTXudFvngbj70blxE6VEy3ZsIbY8ktJDM/RuUO3yMZQVT8w0ZpG",
	"Ky5Y61Q3q01tAnPRlou9nDzHtFyXE7semwaBqzITCFtnemMzF0Dig6poWeYPOSRnsEwSJVRiKKHzZLWb",
	"BTCe54byMEyhkF4zKXnMCA/7NahuEueiLovDI28gEcsBuZycI1NzOSGp9Hd652BjuP09KuI9e6S3Csax",
	"G7dkooCAEuhCD0LdEN18pqoNquYoP8KzKHM1vgSjVWm0KkGPGvJsZ1iqd96tbak2etgVOdCo6o9cazBy",
	"gZ/eQhW6kkGq1fpTMBqqvlRDVYgs9eF+w0258vZbFUw7C7AIVyC/cOoycrNKlVcq0+L7Arwv036GCMcf",
	"stmC9g5LwOzXymxkW97a3XjL7MOd1g4L1Ye6I2FMJVlpcbg3VKGpwiHGwOQx25gm3k174OkW5qdiAxb2",
	"ZnC/fM3+N3W5oF3i+5cp+ozW1mDO5LdU+LkGlHUjg9lODl8furjJw7Nnh/sv3xwdXpy8ee1ykZofqzww",
	"Zu8zN51KkkaMCnxDXM+iVB3UqaNS8yhPqCSKm5vgesWtnYhKRqcgstsQRnK4ZpJHdP81u/nH/6Tyakqe",
	"5Qb+9k+p5M6hLxd0PefLPM0V+WYvWlFJIyg/4vaKmUFVUffu4eXkxauLy8mUXE7eXhxdTh4FyRPqqc+j",
	"FYuta3rdKFC+2Mq2cuVuUnONEYnTG5Gk1FZtiy24KT+BpuZr9zW15QiILSIY4CV6VdVHslp1DHgtqV9I",
	"GrFjz+F9qM5de8DV+Xa6dg0aHSZKHktU3eJ1G6/0gmuf5IYzWLUgqhv03QdMppxLrjfmZtc46ZxRyeRh",
	"jq4E+NdzRw/+++8Xho+E1pMD+7WcEgJbP0wnqVyetKT3ODkupG4vCUAld1HNPGZ6QnJclxHmwIz/Dz/l",
	"B834T2wz+WC2ZCiHy5FKIwAStqY8mRxMNKPr/1okfLnSkU5mPC1HNEt7Dl8ga6hME3LB6Hpi9bUTxxNU",
	"ejeyS/1SHeLdw1C3R5Y9srWE0WgRJVRi+LNXbjhd4HsIFI/Fy7JYtM1XySVUDzRopTDjccIjJtBwYHd2",
	"mNFoxcjT2ePGZm5ubmYUPs9Sudy3fdX+y5OjZ6/Pn+09nT2erfQ6QeDXEEddO6TD05PJtATUyfUTmmQr",
	"+sSmMhQ045ODyTezx7Mn1l8BgMywSPvXT/Zprlf7UaF4X4bYghdMQ9UsTIDqShWUxpVZkUCQp8KA3cQA",
	"r9V7Q0IrSCUK8z59/NjBBsM0pl4FhP1/WiUZInJv/YNyFgC8WhqTn8wRfPvku53NV8h8zezIOfjZlEWB",
	"WYz2EbqEkIvq6SHmV27Alu5hrXfws21gZKzaXUA22fAduF5w82US/V+CFQgDoxrhzC2tIAUrRmOgOQ6+",
	"c71KpUsmMvUOs04H390hMLRfzgXsBLYBEHEvk/5AY+KiUWDSJ/e2Uy7KvX466J9O/nwvB+2qX1hJlTyT",
	"MpWDkS8qw4oUhhU5obUVE0Gybw1HqvrIVTHS9GztqPpwFNL+WZ6saGgQFPPWOwc9KBxViOe2iqCXGty+",
	"/TCCGQAyfmIWV11v9MDlwn5gsxlbs0PhxlNNFd3CKxS50rtIwzSU/NIm7MV4CS15pMsMz+D9a1N4uxym",
	"mNuSS1uxoFpJC+phFXn2QwtNKrUD7m+16Ks0dUIBJKS2+XjNEV8x8uD7B1Py4Hvzv1D2+t++f0Aestly",
	"NsWiC0+w6sKT6RXbPP03/OOpFSVCO4UZb7dTv3S4n9kbAa/YpJ9vvMwlflHmdod8MZjIuh3QKt0JX1Sh",
	"HBLQ4KC1pO1rusF83fXa5CXiQHCOlyYdTqgVMvga8saU59Rrqr3Tx66VioDiuJ0Z+nKfvreCWjaE2Vf+",
	"m3uY9Xkq5zyOmcD37j6mPLdSy1tRWG4rr13riwZBkFkaMiwcYU0uOuBZa75q2LkrPtcu4Ic03tw9BuCZ",
	"lfK2ljn70EDFJ/e1kNBBxyMu3jUufvv4r/cwpRE+E446pD8+9g9ie/d/N0/eB6QRCdMBVSP+XqUWxMI+",
	"KbG+SiWOoVMXlegVUP34kX5CZfgwXGnxqNvS9vZNt4WyqpTijye9upf7q0Hcb+9hytepJs/TXMSfy7sd",
	"lEQlo1g0p2Rxow4EqyLkC6bvGRuX6OT48ag4nWCKalsrBF74T8Nujwg7ImwLo011FK5nGa1uyWhD33vG",
	"2ayoLrSrB3SoKLAHU//ndrdZyXc8SBD4xERilAG+KMo0ih1BWpgHmRdIxV3jX44G8y9n2P+e6SH6THwS",
	"gnhvupFPShJH1cxIlkey/AfTBu3TLJOpzRcXpOaH0ADzmjCx6eJwm4wt+ra1djh0k++MomPpTn/BI0Uf",
	"mdyRmo7UdAfU1HoIdvuPoB97n7PIsR1q9AwZPUNGz5AvxjMkACM2dQdZJHRp4MSWaMbUbmY16zWVm2rc",
	"ipqRv5udwFGlBFgT57yNxwInWckSB5hvB/MiPGzwAhw4JD96gNBUgfsH5RnVgxigBPoDO7AZ6gHk5JF5",
	"K+p7bUNQVqQyuVO9PtLX0Wfma/eZQXwa4iBTe7fbvGGK7PN3IQzYwe/Zz8WfddScjE4tnwI9m1z2AHeV",
	"Y+eu0ou72LLA3a2UDbXBR++TUZr+nIzZ3gvYHgLWj0EvmN4Z+uzMXeQ+eMgRd0bc6ff66MUfaLgzDBqd",
	"N3aIxSNjOyqxvyReusUtA21xQ2iVdcDYGbX6LFwrtpG97486jXL+SA5Hcng3qoX9mEF9ClVkiAmRzSLl",
	"TqmeRxWA17epbig/7lDpUA76WdBS/xRGrm8kc1+TwNhOdCQTMQMc6MjJg7Y+bOjlsmuoZM5sm12qZkKT",
	"O4NqWT11VxRo2lre50qkN6JYyM8uE13Y6AiNz6ptJ39UxdFTRI86NEPiJzP5SCpGjujTEKcyYXInafJz",
	"RQ7XHJ+7vOmj/njUH4/6Y09/vDVOedrknWHVqFMepYuRnHwu5KRDw7s1Nanoe3dGT0at70g/Rvoxihx1",
	"kYMJmSbJmgk9IDlx2bji1BwSMp4VTYv8xINJGB0YJIxhF5B8XRCuVF5NzAIlujKZXvOYxVM/d7h12F6x",
	"6IrwviA269etwpOA/zb4ynNFIqpY4VLOne7G+uPXTwTqctAksQUFTd+pLfVRnLI/Ebrlw8rnDIuNtcZ7",
	"KPnJ1C2Nix/p6siX3SeVK9EnGDbW+NwTQVbC88DMw40OY1zZGFc2xpWNGYe3fD7HTMNj1FTrg9YXQCU6",
	"3q22YKpGjzuKq2rOc88hVi0LGL2wxmirPzKfukUM1nboj71C6L+V1rF9yjFKaxQhP3cRsitgazt0q2jH",
	"7gTXPhOT/KB3eMS5rxnnugO9tsM76HTHmDea7e8G+0cGfLTAfaE8f0+A2HY0zjoP3DGV+yycCW6pZvgk",
	"BG7UbozEdSSun0ihcousuwGiHCgMjL3ugBZ/dnl1G1socg1/aprsFtKv9Bmp5Cj1/nFo1vaxIR+vpLqd",
	"M+qoqhqR9qtXVX0ULoYVV3eBjaP6alRfjWRolLB2pr76KLrXpsy6C8o3qrRGNmhkg3Yqu1ybeVollDOm",
	"JWfXTBFaONJil9mlCDtW44B9ztRfjb/ueSo1SWXMJMTA2IoE4D9rNsTXTGm6zqq+0g/MGA/IQ8FuDAlc",
	"cKl06+Jg8MqiYhwKqpOraDKdMJGvDTBQ+At+fDe9ra8x3j/em7ki5yzc54e+m+IQX7QX/p0Kx+baRj/l",
	"r95P2YBB9Q1YJIz1Bdg8N236gmqe40BjIM0YSDMG0ny5BZpObOxsWyUmt2mgK20robHNwKbOcZBPV/gI",
	"yNb4Mn7tLyOA65CyR9W3sC1QB1rdUXAOjn3PATnepKObyhiE8wkws8Gz7v8O//2wr9k6S6g2rJHiqWhn",
	"ZuEhdq1J0TzEzV7YVj+XjXpVmVAu0D2HjWlaFJcLj1LcMgPoyFOPPPXIU4/B6YbO1ujWyNiOjO22z+eA",
	"INbYFRKsv3Itgas1qPzox/Tu3tK6SXLgzGN07Gj3i/+I0myQD5aMxsgEFi9gLyK/YHrE4vvE4vppj+j8",
	"1aNz4A0fXvO3T3GFDZ3iaiu/nerQYyqJEbu+oMcS6/32Yc8LpneEOjt0t/86jDcj7o6421tvuA9/od2O",
	"MHh00d8dAo8KqtEt/wsyYvWVGu4jU9bffkeE6rPwqN/C3H1vdGm0rI90cKSDd6DJ6AuaBs1lGa1U1WE6",
	"qhiWzG4XknSn8tkoGo2i0acWjerFr4YLSrtCqFFcGsWlkZJ8HpQkD77JIJNs+Sz7ksyuKMkoz4zcwIjD",
	"QxlvdIUcFP0bc6W5iHThsoh9i6DWEtlLdNxkrC1M+CXOPADfzSjWi7DAcmkXVixCpuvWMvdcxJ1I74Jj",
	"bYXJIYGxh2TBE+thW19LKpIN+tgW0XJEr6jvR7vk10xg+8I19E78TnewSnS57Fvlzn1GS3DD9d5LtPHt",
	"hDH2nq6zBHvgap/hL4DU1j52MLE/lh6rBnMShwbgmorx+tdcpmLNhP4+k2mcRxodbSRb8lR8n6s9RpXe",
	"e2I2wJn8fk6jKyZiROxhNASQb/QL/dr9QgH4qg+CZFmquE4lZz0BwWeu5aYvKvjMH3OMDR7jGMY4hjGO",
	"YQBhKynM+FR97U9V8S5thgToBt6mtijdsukdhep6E9xzvG595tG0OAbtfiqUbWExt3FeHoTU2LqC1Fsp",
	"FAOTjL7Mo5rvc1Lz1Z7KDofmQRj1gumdo9NnYj/vfkBHfPoq8anHyXgQTln78Y6xajSi7xizR654dLj7",
	"0hjxPu/jQfTLGu53TsE+C+P9tgL9/VKtUYEwksqRVO5eZ2EtXBsR9drFsOn5RkT9lrGy7WgaG01jo2ls",
	"NI0NfJlLwjEax0bjWPk6DTOPBZ6odgNZ2fjOTGTeFPduJKvPPXK5o5ns0yFvG9O5naVsEH47W1kFv7cU",
	"4wMTjfayUcr8vPT7tdez02I2CLPAZnYHaPXZ2M2639QRs75SzOq1nQ3CLms4ugP8Gi1oO8fxkWUeFcNf",
	"Hpfeb0UbRMkKO9od0LLPxJa2reR/3xRs1DWMhHMknHeh3sgVk2p/zfZTuaSC/wbr2q4ScaUnocQMSbj5",
	"15pZy0TY8PZWMfmmMu0dEhp/oj5l/adAwE8LKGWALJhP09qtODjyf/fhyGZGb4MaI7YrO7OX+L0hrpf5",
	"7O8MDAYkcf9K7RfuEt9BX7QPIu+Ty2RyMNmfGP7Dtq7f8Bt3lZiKwIA2E9puYealLK58mDQNm95AqSBH",
	"TGq+MK3ZOV8KLpb2oaza9J2Ju2ytsLUsntXueTDpQHBQTMjcO0Kj2n9wsGYZ+M5xzVHalAFcLF3Jd284",
	"qCLct7RA0eBKgYdtlmDzANBIpkqRmC8WTDIRHh0Dm7cZ3afRwSEr9Kdv322x0XYsz8ukf6Q2b5JiLO99",
	"HbDjiHHYcIAo2hEdNn549+H/BgAA///UNfkxayMCAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
