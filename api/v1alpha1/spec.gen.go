// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"iA4b3799/38DAAD//yy3/9VPJAIA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
