// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
