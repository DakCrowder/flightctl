// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"lQEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
