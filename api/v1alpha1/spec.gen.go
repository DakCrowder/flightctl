// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
