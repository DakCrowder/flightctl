// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"sPHDuw//NwAA//+TdTIEZCICAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
