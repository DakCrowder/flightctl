// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
