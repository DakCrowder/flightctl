// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/8NGcUlZJQIA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
