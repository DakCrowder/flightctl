// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+y9jXLcNpYw+irY3q/K9myrZTszUzOqSs2nyE6iL7GtK8mZ2o18NxCJ7saKDXAAUHIn",
	"5ar7DvcN75PcwjkACZLgT8uSHDvcrZpYTfwe4Byc//PbLJGbXAomjJ4d/DbTyZptKPzz8FLLrDDshJq1",
	"/TtlOlE8N1yK2cHslOWKaduNUEGoa0uWPGMkp2a9mM1nuZI5U4YzGC+PjnO+ZlVv24QYSSiOIwUxa0b0",
	"Vhu2WZDX0jBi1tQQKraEvefacLHCpjc8y8glI/KaqRvFjWHCroC9p5s8Y7OD2f41VfuZXO3TPF9kcjWb",
	"z8w2t1+0UVysZh8+lL/Iy/9hiZl9mM8O8/wcfost27YmcglrpHme8YTarzCvKDazg58RuJrN3jVnm8/e",
	"79lGe9dUCbqxEPrZz3bkO+EC/LhHUhgmjF0LzbI3y9nBz7/N/pdiy9nB7N/3q2Pcd2e4/y3PmO/0Yd7f",
	"9pRl1PBrPGzbWLF/FVyx1K4LTu5dCzyN9b0U1z9RhUddO3hWfaBpym1bmp3UmjSOYt6A9ktxzZUUGyYM",
	"uaaK08uMkSu23bumWWGvDVd6Triw62IpSQs7DFGFMHzDFsQe1hXbEipSgj0YTdZkU2hj78wlMzeMCfIM",
	"Gjz/y1ckWVNFE8OUXsxa2+64Jx4MJ0pe85Sps5wl488qAkd7CnVA0uo2DowFzT7MZ/ZqdeBcNSGxrUpo",
	"PPv//p//tw4DkkmxmhNtqDLkhps1oSRjxjBFpCKi2FwyNQfYJVIYygURktysuWE6pwlbjEK132ZSsBGA",
	"Ot7QFesC99AtPxYZF929331413+2Z4aaQscpAn6z9IASzcUqq8PY0bKUXXMEiScRJ4rl1NGEMwti/Odp",
	"IQT+66VSUs3ms7fiSsgbMZvPLIHImGHpeLpS30E4Z+tjsIjWt2pVrU9+ma0P1bpbn4KN1AH9k8wKvLkV",
	"+tTB/YItuWCaULi9KbmGHqTQLCWXW3iT6iS5jkpxxHgr+L8KhvjgCHs4rr37XMTofft+h/QTJnv3kXce",
	"QdK6sDG4NUlQfeu4I93e/Y9cG7i/wbV1je0euWEbPYL2NM6wwnWqFN0O0k/shvejH8vu5Mhft846cp72",
	"OJdMMZGwGCfkPlnOBXE8z+SWpeTN0fGehVHGqTCE21O0FNOi15ImhlzS5Mo+VL1zx+5SuJ4BkqXPis2G",
	"qu1I0pVlIRB1N9n6ntHMrLez+ewFWymasjRCqnYmT/XVVnN0Ngkm72wToUz1BuVyLegKsz6SYslXbTjZ",
	"b/aNW/JV+3rRwqzj4IVuFg7Rm2X7vT39saPb29Mfh+9EOXU1WuxWfENNEuHA4WfCgY9nGQMmiwtyCT9r",
	"9q/CXrP2fjO+4SbOW2zoe74pNo41sFc+ZyphwgACLN1t0hZfijylhhFHVWFOO9U4unhSjgrEdMOFnXZ2",
	"8KzcPBeGrZhCXlWzjCVGqiEa9iO9ZNmZb2w7FknCtD5fK6bXMkuHBgjX9aHrIM4cZDsOxH8mqXvoLHwy",
	"R6EBTgjAS0bYe5YUlu/loue8dOd8h/VxcUZg08fTfbxbH+b2EI6xw7Mm4Z/b+0sNW22HRjuVWSYLc+ab",
	"Ny98OU7smh/ZPS8torMzvrLsyqnduo5c1s6mRAXiLVHux6Ul3kTzlWApSaq+ZKnkBg7o6DBCGHL+E1Ma",
	"ZmyB/uTYfaud8zX+xlKCEMEHiutqWY6pXFqkxa0vyBlTtiPRa1lkwIxfM2W3ksiV4L+Wo2n/UGXU2G1Z",
	"JFGCZigbISe/oVuimB2XFCIYAZroBXkllcXapTwga2NyfbC/v+JmcfU3veDSHummENxs961EoPhlYaTS",
	"+ym7Ztm+5qs9qhIrHySmUGyf5nwPFivwzm3Sf1dMy0IlTEdJ5hUXaRuWP3CRAhkj2NKJeiXI/Et7+vLs",
	"nPgJEKwIweDQK2BaQHCxZApblifNRJpLLgz8kWTcUk1dXG640f6+WDgvyBEVQoJkhbQuXZBjQY7ohmVH",
	"VLN7B6WFnt6zIIsDc8MMTamhQzj5BmD0ihkKmOxYy74endjlZLWZLpm82w2D3VuvYYVv7qoEm3Qr34lu",
	"WL54B9oBbDTcQ09WO5tOxOL+iUX5fMWFnd6zGfX0db83H9ov4ES6PgHpsmeNhGs3UoHHvxOt8CJ3/Xz/",
	"qWieMyv5yUKkhFqZVe0lilmgkqOz0znZyJRlLLUC11VxyZRghmnCJQCT5nwR8Bt6cf1s0buENmFh73Ou",
	"UPXCEilSHRNkoT8qUEuacU0znnKzBe4Hbkw1sZ1mKdWGGuS1v3o+a7Pe8xl7bxTtU/+WeNY64ib+NPTC",
	"dmBCDV4upr0gb8GLlgIPY2DOLJxzmRcZ/HS5hV8PT46JBoyxsIf2dueWrvHNpjD0MmMRLTBepChXeQ6S",
	"jGZ//fMeE4lMWUpOXr6q/v3D0dm/P3tql7Mgrzwnv2bEvkyLktfkLAOOnob3oY9hRapQO5LLrWExxAEW",
	"Vr2OKkSORYqXDNakyjuBfZDgA6n6V0EzvuQsBX1ZFEELHiF2b49fPMA5BYvQdBVTd72F3wHqdhtAfRm8",
	"CVdsS7BXsH8nonKtizr3X3soBi+w3fKwJuoBANMghf421y7HbqSvQ2VXXSia50pe02w/ZYLTbH9JeVYo",
	"RnSpfyp3GVgTdAfcCV9WhkDdpnhB0ziOuiHb8ty8AhyRVgYvYT4Kuyx5RfE5wjWW31DPZk9Whpi2ID8I",
	"eSNIEjRUjBwC6Fg6Jy+Y4Pa/FkLfUp7hosZxKn7MqFI2vA3BFqJ3oByoe4PV8aXMUJ5peECkYIRalDP+",
	"uJNCKeBAjD1Tz7vaS30akLSG7olqc66o0DDTOe8yctl2xPANw5nKpZmyL0uRL7LrctfQSEKFNGumaqdt",
	"GaA9O1acE9GWXrRX8X2xoYIoRlO4Ta4d4YgTlq/z0KGXsjBuxeXyogRNXgK6p98xwfCdju9+4VmZxaps",
	"iUSlDo0bqoHy2TcrJUWO04bv+l//HH3XFaM6KqiQx5eKs+UTgi0q1sHP+UiP2ulIAdGP6gVCP9LIbmgs",
	"bWCAQX2qW8E8duVKAFTn34sswzaNGozmcCnlkpwrK2h9SzPN5sTpqkNVvP0+m8+gwc7K98bq3FiNX/3Q",
	"jZ9DvXkdmu376HwlqlvHQ0ki2I2ndKiw9/9Eqge7tCTPfgSdLL/MWPMPTzdOqNLQ9GwrEvjHT5aXtS1Q",
	"v3gsTpRcKabtAb+1Io4zw+Ys8U1fFZnhecbe3AimNKzkmifsBbPSDddWdrCdxgH7pVAyyzZMGPdmBjvs",
	"fFfHtCnB09mihNspy6XmRqptFGgWVp0fWpANP5ZQ/jZjzHj4wR8xeCMcA6jjDyHs8ZexJ4CXcMlXTfPn",
	"OGPCd9xEug95FPxQ8uZnLFHM3MId4Razfm9MHusGMMgLfyqvpLAH3fZEqb+mG2w27OhUaR4kcZ2GGctw",
	"9KgNvN8tqb0T3KWS4uX73N6lOBuipCCsbEDwNYOHyI6dFhnoVPiG6cWFsJt0Lbgmv/yJuP//5YDskVdc",
	"WNnygPzyp1/IxslrT/f+8vcF2SPfy0K1Pj3/yn56QbcWaK+kMOt6i2d7Xz2zLaKfnj0POv+Tsavm6H9d",
	"XIizIs+lskKAPUhqpF3Enm14UIqUljdGPdJjtlgt5jAMF2Rtl1yOx66Z2sJvT+y8v+z9ckBOqVhVvZ7u",
	"/e0XANyz5+TwlT37v5HDV9h6/ssBAU2ab/xs/uy5a60N8KjPnps12QAMsc/+LwfkzLC8Wta+74OLafY4",
	"Q2+a+l7+VoHEvpp/C7pciJfo9mchR57u/W3+7K97z79yRxplNI4KbeQGCcuxWMo+ZUWT1wFdDipkU5LA",
	"QMQhmDuA6JRNYTQYhAu8jCDGAVtYt8G3WAxceHtx+HvdmJWvt5onNAvGm1TQk71qslftVwzIeNnD9bmF",
	"JepdJx633OTaPlxxDVJD2Azd2Pr91UCSSbfx1997cSy9RG+v2c2aJ2vQTEBPMsotzk4DXqQROvq6nMW3",
	"IV7OLcXH+OiBQDruzOIOnR/m3Z5xlYTmmpROZ4BkjXXdzlGuKbx2aGZK/y97XgFAy82Puld1/6fYq6ax",
	"gb8/a3DFangHRtzD6teUu6e095qGrx0qQzzlAxVB6I14J+qCfue4tqvJAFSRD+8C5FGg3apkfIRXpyuZ",
	"YiJliqWdz/Cpa+Af3s5xh3S+9Xl6N6ll1slhuM8ho+FUGfBzIoVgiZP6y8OOuSgBs378Ik6I3Gdy/CJU",
	"KDVmiF8M7PkqeDoa973k9cpZPKH2pM2u2xkHvq6FHSRUwGupUZcLrlM047+i0rEMEmFqwwXN5uWa0XnL",
	"dpsTZpKu46LpG5FtZwdGFaxxNRu7mgcA7D7KUG5uA8IP5vhO6q9UWpe2S2116wwNVStmxj2b4VLOoV9c",
	"FYdDjttSME6bjJemHkQWbWdobW3DzFqmdZQKFVRvBQM1DiijEiPV9pTp2vr6VEB9Kw5G7mtWn7WEwrF9",
	"BxU3nUTdEbsGLeK+W3vHH0nMK9EFCHk10Z2Q8eim3RZvR8l7xhrQ2fbAsAzzoFrXFZhVXMRbob08v9Mt",
	"aiy4nCL6tZw3+rVaTMfnYIUlwH7kS5Zsk4x9L+WVh5Pf8DdsKVWo3ztcGqaCv7HBKbuUMmxR/bALKGpL",
	"aU0dadNcTecw4QK7xgnW3AbOrViDzPe+UzxsDu7m/mgsbOz1dugXG6QL78LQyxjEKlrtrzWq3h0C1DXH",
	"9V92xMHGqpt41PhcW0Xke2xpA80aGBlzSKm+1f0S8Xc9qYA+uRdicBKjpEen8JscDH9vDobzmROcx52g",
	"ZzLuzjMxZjN7wQwERr9AV4O2OgnF7mEDELYD6SvltpEVaYxUJC9ULjVeYE97+1bSJrEW2tQkay5WYDLs",
	"QZal/Q7aLY3uDNCxwXeN9chqwD2ARGtBY8F9yrTMrnvATTX6HEHzOMRxj74hoZpI25g8FkWWEb4kQuIv",
	"T+xm7Y/22fdSYsTY8EAH7PcePeBcsWsuC/1ql4N2Z+z7Zltn90lveeCgM5NZ0e2r8L288cqFZcYTAw4y",
	"ym0sBAAapmA3s/nstfT/gn29YB0h2r1XrrG27iv3RsddjcOvBD9duica5Wjy5qxUn3SKepuoM9N5bRCM",
	"Z0UlsxoXqIjj9m7qNszym7PRW/iprjDz24i/2fbLC77qdPJN4VtzLDRREr2mz//y1wP6dLFYPBkLmvqk",
	"PYACZFvz/GhNxerTUPbmGqIoL9hND5UT7MbRNaR3JXVTbCOvWTqOuHnS0DORbxKfTUjBxkzVjbjdJ1V6",
	"yOx0sUtmckgpk+TFOE6jvg5v8Ui5vvqY/hu2kWN5ndgITbfTvJiVg7rVjQVt/x3XNf8VBHb9UlfB5v+k",
	"yglfR4obntDs1qHtsYWGkfPtr9Xksa/BgmKf/SJj30JnvcDS2fGANJ4P2uMtUFlTxqWUyJ3L0q2SSjTc",
	"pFpve9IRuu8Xgt9vsYaol1Zsei2zmAnxPAjfponh15Xxwmntd5X+vE0mGiVTVyPsrI0HN+OR63CciGOs",
	"gGpFtAZ2aTUcdH5h7kRcwNF4GDQ8w2JQwLxhaYcxCT9C5IRPRhD4tDU85Cxjd0KNYUrovgB6lERy17K2",
	"mZaBFb2a/DqsHAvM1BxTLEkF/5WFFZ2XS/5+TjD6fM2ybE+bbcbIKpOXfjJYP8xOV5QLbbxjfbYlmaQp",
	"wylgTRv6/kcmVmY9O3j+l7/OZ26I2cHs//756d7f6d6vh3v/dXBxsfffiwv4v58vLt7928XF3sXFny4u",
	"/vHuPx7/73Htnvzj8cXF4mdsGPv8v2J813C6GNQWnMiMJyMfn7dBD7yuHzrfla6nOvwamjrjulYdZKpx",
	"xJO4vhsKNhCeoVdDYgqaVfEPH0trHVMcktxKzbsDfWm7oURwjLaN6TuP3nBGGB9BU54BwBHdRbxjgoVj",
	"NLyExmTGW0bNhO/NKIJdeQpY+cLbWG5l6rIjZFSbM8bEmOgXdy0w2IMJHz3m6N/4UJdSz34r08COD0vZ",
	"p/a07Mpr7qyWa11IpNLeM3TEAFX7klylu1CqtMOlLMCM2qrqmDiLI2YIxvD6ldcYzqZabwW14KqFN6Cb",
	"N7+9f1FwV9dUpTdUMVDvo6MzFyv3ZJKawv3u/Y7cGnxQ2N2ZrO/A52innF5xe/QbiD2Ip+8KTZ4n8oYp",
	"lr5ZLm8p/NTWGsza+hYsJPK1LtrUPrUttLXPtR1EvkcEoxq2j/MDf5N7/yG8nUFQOnufS13F69IVE2Zx",
	"IV7SZA2hxolUiulcihSDDyuWGK+pM3UlNKeXPONmu7gQwx7luInaLU9klmGG1NJU08lq2EV22gDt63K4",
	"gmys2CSe2SywvnSMEbSwrzmGNDg4tfzdq5Htece8xL6R0pDjF7sMhQ77Yyh7K0bAPmWeKCG047t8U1Ku",
	"M0+5Ri6vaRQKAVpCob2Kef34uulIiysecJnKoSVoCTdU0BXGrwKdxDcDsvAmWZHaLzdrJvzv3sJ7yUgq",
	"b4STSCxdd2HQ7Svo251hvM4gv4GbKVuX7+5t+38YAFt6K101runuvatqw9/lc1Xb7O2eq/YQO/h1VAAr",
	"nTryc/mCQuz9m8K8Wbp/B848t3mnaosMpoh8DWeNdm54FdW/tp6bUHAaYJN85kTvkwp6bMVMoQRLEeGW",
	"DI1rVRpiMEf1SpPVTe567EZEg6dsSYvMzA5+a71Fh+RSMXplMbp3J5dbchGu62LW9lCqLpdu8pi/g8W7",
	"NfUv3EhDsw5dtf0UhFzEZhoZne+o3+8JOk6w6INO0/cXQDWPXNbm+Tc2HKVGXF8NxsbuHI46/53F00Yf",
	"cKcIgpcbB4C3m+srzHSzS7mGlCtIjbot6zV4Xa4zHwZj9u+lp7DAC65VAbN+U6TOo7yhjmu0qGdKZdcs",
	"cxmN5Q1L7bJcaySTCkPSCYd7mru49DYYVkoW+TfbbnVbRi9ZZvl4YN5zpiBQALpBdQpvaq/mv4Tl1vRP",
	"gQb28c+He/9F9359uvf3dz/vlf/+7/3Fuz89+UfwcYTuFFS9bwW9ptzZNaPpejFvbkB1/BmRsmeJ1L62",
	"AoIPtMk9aXfh6+HA9I1swUtSiPa85TnuNH+UhyvCpCmOsM2eWgrSvbgyI5pfRxmThnEtRpLEJbPHehNl",
	"h4rx9ZmmwJ2HEkjDwK+d9ziz2OPGvtwSioq7QnCzIFW0d/kjZAU6IL9oDJzWmNNtTn7Z4A8YC21/WOMP",
	"EPUN1zu4av84+PnZ3t/fXVykf3ryj4uL9Ge9Wcfv1UuRSMvUjwmsYK4t0jmIiwHCQA1teIOGXF2eUW7F",
	"WsycNjqhBk514jr7v79xg3yYBzk3qrTezfokvsWe04YOccbVmGeuQ5OyRcaMvUithCBt2Laa9OQmdvm1",
	"7G3EBfQaEyYf3ynM+w8Y5t1CqN0ivtvd7zYNcUeOoJjA0Nm0yr0W1xiUhCKwh5GKZHVH91Gfi6gny9/N",
	"mpk1U2FSO7KmmlwyJogfIDjzSykzRgXasy5Z9jGFog59CkccCdSpeZ5tq9IcHTk0Wofn9rnTCQWy1ihx",
	"ovuo23z8wKRDJx5Yoz/27A87vCGBN6HGpQYIT/+G6trBjzM0+h7fdOUlqKc3sG1HiE/BqPNwSxEpZL7j",
	"EdzCJSAC+PKAFtG7Fo/wiTarB/u0mkwswScP+4meySinhDbjOMUCfanJxuMMyzANAB9Ojs6bZUOkPq22",
	"j7T37AdHmYijse5wrY6ltg6z9GpMQxi+K5FHvO53NT7jzn3wDD5DqhPcsLZowEZwXTrTrJkg9iYHZJzr",
	"GJPTwWdYqI478g5bU0fD3d6iUU9DxYTeiqUJnLuG8jKHN6qdnHmxc8rldoJh9hGU986SKLeVCD2n65r0",
	"sXlreePUUJYQAu65Yp3fZny1NuTIEkaZhZc18P5qVzOzxDEpVWU76UMOCygjG6pBCr7n34L4sb89/dGf",
	"ztvjCgvBlE0KjS66ufJvyf91SuwVAR4g4+IKEwjCfP4F6zH731bR06XvacCrmqATBqOuBMBx+Fr4wnRV",
	"unT30taXVbs0WMzqFlcDh94LUHIvnlTnCBoGGWlfUEOrZYZoDrpB4BmoX7odH2s725We/3gWR3xczBXb",
	"9i7iB7bdafIrth2au4nsHVBpL3HUwY8nCSMog8+OZNFC3vLQg33ZSyUVN50gr9oe+qbd0A95hXJkUqt2",
	"0oXAsWgv5EftKwzEI00V06UPxuDGyWPPWq6lNlbCPMilMiPi93oAVC42evLXrqZ3g/76QoX9ci/UiQD9",
	"Py4fqabiqxWkBwMG3E6ANglk9H2p9FyxJX+P5gbGQWVjhzsgj8FeAJ4n9gf9JJjBfaWFkRsoQuHjJ57E",
	"XcAmifKOJcq0ivTsfbjsiD4qFHzNryF8GdWl45SqZWHbSZa8c1myo1zEIeLdXunx1ZDc6pw7wjF3pR3u",
	"UI3eXdhBr6Uyc7KhyZoLVq3THT/Qn3rUeaMEBJKjwO7nfSqOsNBNkFT+yJWyCVLX44e3pX96/ZdWQx+D",
	"3/glHLMd+9bxc6PH0cnbVjDm0cnbZvjm0cnb1/Y1rhq9gujWVl/8udkdf22M8ILrq1Z/+2Ozt/2t0TcI",
	"u6l7VAcfWo7Ywbdm8OoLrh13EcIm9othwrTc6tzvbYe6skPpStdXO6FT6mwcWitkvT9fyqw/v8dsPjt2",
	"z8c51VflXOBv5+sHnygJxRTEqqdqv+Vn4HqOIutn2DQoc9LtYhRwAG+wmgheiDlxlyVExfKu+Iv0blib",
	"3q/Tqr86kYIp87LQCm5q7jifTlYpyHTQYIyvwdju3J18WZ25pUwFEOrUFbiRAiFSluSuJTzAcM88d2Gz",
	"vdejV0PVn4Jn4GbtMHIz20znXe+PtepIKDHiNneMO9SvmiGCRJ0FM5otq1Gaj8OAC59rFrBIPmc/lsUL",
	"szt8GFuQvHPwUeFuHUcwrnf/dbvNGM2LNVzNpOtwhnqOvSof3u2UgAMoQoe9zH9q2MiugRGdDGOf3DBW",
	"HsQ4axgI0ZMF7Iu1gAVsT5TdKVeBEgigmc6lgCJWbdmjodvynYf1LTvOM6AyKueN7flbnnkuuGvP8BFN",
	"OEseSxWb9PUHh0ti2HtDHr89/3bvb6DnaRSuDSYBX36edRpgbDvvfzmsVw/cSaNeunb73fna7dcyQ3uH",
	"03ZHYj2esUca/bPngUuu04CBZ67PaSaKDVM8IccvFuQFegoD4b2YKSnNxSyOJTJlvVPnTDmREoo+L8h/",
	"ygKIBy4GQwI3FtWXdMMzThWRiaGZt+ZkjIJ37a9MSV8O6elf//xnOD6K5t6Eb1wHzOIe6/Pn50+fWOpl",
	"Cp7ua2ZW9j+GJ1dbcukcjEmZ9XlBjpfEUqcSYnOMCKxvBlDA7lOTNACYXV68YkehOzMgIrQgYdc9HFTX",
	"nXuTBzU1vWCUlLoJl5gsCJIf56hcG7pSddR+Pi3Hrv3sGdp3boW7hayEZGSQDwtxbqjx4SVkKmQnFEx9",
	"v7UDO0qq0BHiAWxfBLddUFvg5OwM9OmUr3jyZZ58mVuS007+y9jlbn2WYcy4pFV+qktamPp1wuRPLmlV",
	"BzFK0kKaPUlaX6qkFZbr7fI5a7fZzd3MRa1XEXwNoQX9tb6BZMpR1vAS8ty5eMEqzd0l85GBLCVu6DEB",
	"gWPVTw+TXPdW1gPHGbnmsfiM162Q8tw3XnTEfEOzf3KzBkuRHjMmSMVrmvrB7YEw6B2fpGpWj8qsxfn6",
	"SEongwZD99s+q4bDRxQMCnu4oboM6Kzn/HYnU9kga9m+y0Ic4Ev6tktG6M0B3lh35HQ7MTfuGVx+6vAG",
	"BoQc9AB2CDsu6+JprTH46yDcBkmaBZwHMjw0bJNnnb6i/msjpXk7YUIjRP9Biog286TE2admxgO/3+5D",
	"7qPLtybIo7NTQus5YSCS0yzbEl4RgIDAr+k1A5UBuH1B2inQbFBBV6zmdMUFoeRm3aXC2s2ztzzxj0/u",
	"mLbSs+xS0WPuMWYUT1V/c3d0Jf6OCaZ4cspyWWoHos7wS5pp1irZ56hjv2ULh/b2sEJ1JDB5nEut+WW2",
	"hRzuhj2BbFeaQ76IUUUC7NCuTXSv0Tr9rbd5xc2p3U5sjco7NqE75Hfc1LMQE/TX2yUnhs+E4etG8JWn",
	"QKfl9jsq4vrPw9rnaqiSV46OiXT8lF3z7vRtyn21iy40q5jo3vW2CoiWi2/NOu/K7jHvqF7c1rXXUnUP",
	"r8aVxnUnH5sYCrYlns2oFGiNVFzL3qyzWHKm0CA/bJiJpIK4ZIS9Z0nheIdRlMiurZcaGb5hjpp8Znkq",
	"yCP9qJ6m4tHmUT1NhRWjH60ffXyqig+xlDjjrPfV7TgtxOzDO1BS1n+M5I64/omqjwk/eimuuZICHsRr",
	"qji4012x7V6tyCwX/4OZG33+k0JYGEfTS6lCdFrJNhbQ9RsapuyjYkuoWhUb4BwK4Ie1oSKlKsXU40Rv",
	"haHv7eWxojdnWeqtBJpsnAOBn0mTnOdQFncFMeFze6M4oPeW3DBVLYIUImWKUHJJ9ZrsJWh4eh8PF7uR",
	"6uoF77Ab2I+Y28hnKaoK7brUP4UQXvHgFjqC1BWik6RUaHuwy10ru51Qs36TD2rca31evrcMHubqH1xX",
	"0LitVROElZ8D4sbs/YNcgpIYVTACEpEbME7zXPIjlkZPLbblFj7JDrNdKek91k+InR9sTNSAyZJlrmIT",
	"vsJ2C5oarp0tDX4tlz5e1VWzBkUIcjc3QJ1tpGQL0EBLQAFQXssS1MApJ+j185FgjiXYmluoRu+IMXmV",
	"FKeXY2y9hgG3ZBf5/fn5CWadtJQgwsbTRaIibxcm6iHe3KykNOToMC7OU61vpEq7GDD8Slx4whrNpe11",
	"lckHyvFi3phXPEdt409MlenTItEmVzx3jK5jGsl10CGe5cJkehQwzn88wygob+QetXQ7+hXbjh/9im3H",
	"Dy6vurLNw6e7gX6hmermEf3XwblGWHwrDOiXJtbG5CPFCYErGSdQWKpwEiUj9lcvQqAc+kgjEXEJpo0M",
	"Mm14N40yFajLLAxL0czey4q/u1HcGCY+WhxRbXHESxMUTTN6KxLSI6hgZZPY5lXpcvL29EcklYncWJK/",
	"NC63zCXV8HVBjg0U4Uc2hpF/FQxyEyq6YQZsPEWyJlQfkIvZvqWI+0bue1vBP6D119C6y1GgU+Qpj+/h",
	"pRx/I7vo+i11Aevak9DLjVQtA0/0O9EhwK2Fc5ckoVlm380kkwKl1OhNuqYZTzE9aMedsuPhfUNWUIoM",
	"M1n7rpb9TRKmS4tfddQL8laD4QnCB+0F9zcTGWCQk+Dtcqv2/Obl1h+wr+dmz8Iy1bASph0fDTF5a5bl",
	"SMsMBuu5HZU1EozJSxvXTnqUeXiusRtzvKEr1lVma7SvSTDATzIrNqxRLuu3cTUaT0N66qkb5YIpV2Cx",
	"5IrCqmI0uRqVc7SrBmUnWE6KLKuU3lXGyOPla2lOUMvayh3pywHU/ZEehX0eLcg/rTiimYFvh9kN3epH",
	"6FeFG+Wa5AWYsywJ34JY3ej12n6pdQKWkmaK0XRL2Huw84qOKhA452ze3AyMOtK1ycKnHMf+0RjL/uTG",
	"8yCN3I6DzsvR63NejeajYkaXHG33jVR8CiPZ3BOHfgRvjo73QJPCqTAO8pYfUYYvaRLhgPPaNRrcVHDr",
	"YEc+FLMfW4YXhsp2xVZcG0vYgPxs6NaSLNrCNNtRSEzn5ixlb46Oy8FAns+kpZyaOC2qVJuSgtq2OJAO",
	"0xCPeWX9fqMnB1VEHp5cYfGSnvJvIUFyLNltihxW/nr9CUbcgkbSMmg8htkd3idK3/Z1Bk/GNn0ZLWB3",
	"FVK8X+apE3CxYKSHNf9HgqFiBn8wqr/qCiO2s0ML4uLsfEyuV3stKc8KxTpEAKO2R7KI+Y1XFn/7FPmy",
	"0vqqSvBoe/MunwLb9KTkyz9CaVoNQgRjKagYYeptuaR45n2qr4YPrPTxgq2B8LGEoxi+YDVDfjlb47xi",
	"9+6H4pIpwQzTZyxRzPSj6F2hx3ymYbaxprJqlQQ7Rkzr9ubcUqatZY/ECQK5FUbuUC6OA0i15ugAOqdJ",
	"zyjweXCoOMWphp8HEBp0BnC9q0OKXR1wmYh7X1YkO+XacJEYl+VsTm7WoH+nyZpwKBSlCSpnDCohL2ZX",
	"bPs1GCEuZlhxir2nmzxjmN+6tFp8nSuZFonLe2Q5Cym+LvQeo9rsPbMA4kx9fUmTKyaAmI2v1F93Bont",
	"DpLve98S52IKv6ESQF6DUcH5j1eOkgTvti6yqmwruuw4h06TrCulORqxDl+/YOmCvNzkZrsPpcPrs2tX",
	"f9XySy6wOlJFNhh16H181WwP+fzLlX5UyrsNze3Gf7ti2zmc8Qe0NMVT1rWvnHc8jPqV2i9BFgjvbOM0",
	"81th1szwJChyXmrBQ1uUvbl4HNdUQfF277MCy9ALchhUE6ZbVKODWC8x1P23yn1nTvzCPsTDpLgoIqj/",
	"Chlje394kHHH/k1Jxje8lK2q6gVwvUtNHJo2eZkduZZdkCl4OCHYByBU1j0IE/ZAkg/6r4KVzsZevWAk",
	"4VrDB2TSfQ5Zx38HDrEU3W3ACYdrJAvuzeTsGhUagr03HleqCgwluI8QTFhbKJFCcw1KRxjLLsv51DoP",
	"EOZB5nZa14jafXuTBxQlUZC9yAonS3bjDcN4pjkFN0WPtHDi3hMcFTD1EkiF8+PjmBbZHm0j9xFPMSta",
	"5iHlIO2cxriCNPsQ2cfmpBAZ05psZYHrUSxhvASlU3xD/jBRZ7s6+KsN5YKL1bFhmw4+67x2o3Rxqe3B",
	"WnkOLpdbJwAeH0xLoCz4nQ40xSb+oP1WIIqr7Okvixf6UkfQIIQL7LqesoF6oXnPy334RWlSYG0ruKcI",
	"SDuMB3rGloYUApBHpERuuAks2popTjP+K0qItYXyyheTPHbxX5csoYVmVurkGt3M1oUAy6+svgIIXC4w",
	"KJMGjZ5U+1HMgQ5vYHNPuJHS0H2rnXivdZmloLmmglw/Wzz7C0klRtQxE8yBt9xyoAJqdutA3d68N3Zn",
	"f2La8A2oL/+E2MZ/dY56rtwjLALT4JXhDnZexYBSdo2NWkygBqr0GHCajcGSUbE3o/GctZnaqNUKCxm7",
	"Ejsh9XRPPpYPBLf+GLKh3bgrlVppVa4SxQMBgVe2kRzl2HI3r6WB/758bx+n2Xz2QjL9Whr4OyqoYQxI",
	"x74cb4ZtygruNQF6uDp6yC9aEAabftcG+4jy9ZU7wPi4kObhYuWfY+z6rM3ZYWKjwWJcv6vCWjtXBrPg",
	"DzyI2zVjy28Wk+tsEs0ykts3TlvKEmWVkPI7ig8VkvxbjXn7sC2qaCKRVkJIU9WSv60gXjYGUtEuKt4i",
	"A4nL6nXON0wbusl7qglgWXeIAwKHfIybHV9CIHXZvnady5H5lJXu/+PmWzHBusIYDgm+4Un5htaioGip",
	"IiXVKFVFPQ3luNAzn5zIvMhoUEAWxecFOWU03bMc8MgSgR+dO/sVihEuuAuKoCHDjgQNzLZUhPyqVCsq",
	"7BNl21mWeCWV/fOxTmSOvyJtf1IynrNbG1ddsF/0YbgRLCpSBlFo1BB5Ax6fmOgBfrciihWOuUj37VwX",
	"Myc3dzB7NXY16n7lmPswhR7yp2VFLeSgH+kg+tCxv7WgxnE+D83kjlEY1LQ+obNx48meov7uLupv3J0u",
	"zybtPfYaV4ABgDB+TIH0BnGyJFxTSO4953DlOs+oSzQ2UPIZjl6vrVSFvjWqI8y3wy+uENwSl5KgqNJ6",
	"LoNTr70XRcHTKSfAvSL7hwEsjGtzmy3qIfXh1ymy/tNH1rfOY5QgVaPFU5z9lxpnf2Ll5aDmZ3k3dvDV",
	"G/SVDwoSh5oMmmImozxDexTmNIpqL+Iu7ofk/5y9eU1OJKAsOLl3OeUVHRwN3k/LXaag/3WrWbQgLPO+",
	"SLImdpwwlViyFDOKV9+8RtDhCj58dWTJq8bYKrrBU5ZRw687XHhP63VasSnaOz3IxoQXHkb6er2dF/xe",
	"S+MEFiqc0xfszLb30qy8Zipw/S2NeTOtkn0uUvZ+8T963FNV8+SM7bv86kEd5iNWtQhDfytX3Dg/xehN",
	"PO1xTK7FRQYw/46b0EkZnJnQuTT0opyeySmV1JRKar9Cot3ySQX97japVDVwnBuuf6/zwuU3PqWL+x2w",
	"wqpxHKM44YDiT3zwl8oHN6hOD5JD/prKqYQ2/AnqTMW4INxm2ozBANwwrmao8ZleV20Htt6R0KXZYres",
	"LnWIfGRWlfpgD1so0dvWDjOmzGmRsZgrbrCD2xTVoXbsuLJuODGV53H5BrnswImRXjNlhYhCO7lDXjo3",
	"nEu2tEgPE1v5gnwL53nQn29hOJNCXxaFi4v0P7oSJ8xneY/wdI65fr1MJJduR2HBMR2FJBq70NX0milu",
	"hnNHhed95jqVmaJrGZX8iMEx1fZRt1cNXq7aZJHScvi1dWe8CFPV3wnK8xyLpRwZSdO5lmrgzibBjJ1t",
	"cCnBpn+IPqKn5btonw3C3udSW0aDU9j24clxuOmg2t8Zlvr1ao1IXZ4yP5rPmzarSXbVys62IpnNZ+cu",
	"GZZ/XOKSYc30DvvpqehydPK2k2LlRcyOP5+94PqqM+0T11fxXujj0Okx0ekB0a5FEromjC5G0rGboXer",
	"b10DCbA6INEs21FztGgfYJwROAsDiJDiYXM0nnebKKl/NWKeL/Y5gtcyA77ctlqQN96FFH/NweHToT7X",
	"PrPODnxs8/mKsLOabvKMixWEf7g6yx2vzSUzN4wJv38CXe26H+ABKXPw9KTf6TrqeXgUkR33UWcgB52E",
	"yn6ta35qBmzwBnYuphi55GLgSs2QkRiqDg6xjviB9McnY8qkJZq0RG1iZlFuVz1R0POuNUXV0F5XNOHr",
	"J9b4uM5bkez8UgK1n3Q+X67Op0FDeh/2ht7HVyF6rJ+Uz7ar3d6n8BjI3FnWUKqn6OKilQjk2LYsW2De",
	"hapDhfaGcoHBSDGOAtN8CGmvju/NLU6/pMnahUTWh0I3UD+AXXDI1vTj6sMm9RmTfdQ7tJZZSNuQvq/k",
	"o5F3qP/+3UL1Fvb/SOUbvR0p7c0k6nVQR3Kz4aYr5gIig2wDsqZ6XaVFt+voiML1A3/X4wddDh64OUfG",
	"HhNicgsdYqMy58PE9DdLk8a0GILdvIm7JAOGshushEUe8zLNxGXGoOq+KDKI1JsdGFWwaCJ8ds1loXsm",
	"8E0+Yhb3zH3LWZb2cAYQ5eR8wyEFqOtXkYCKtpRX3UMSvbZLx/UWTzgyTKYWpV9fd/TyYG5ul9qduaCq",
	"vnQxa3kDrxO0LZOj29sSlL3o01JB9YszFzDQheT1Rm21kTaKGrbajtcZNUbsAUaYEalGOsPPXjPuNk1y",
	"/LWZqb2JgpAwCZHlvEp63Kt6Kqo0nWn7mEZUKmgeLrrpqgL29U2RrtjwIprtIcMdpBQ7Xyum1zJLh8YI",
	"HJjinjc+Tbw72Sgy+3O3gE7WkieYMgsB4y6le3TrJxMSrfpViKHYmV7fUfbQs7Pv+5KH5opfU8N+YNsT",
	"qnW+VlSz7iyg+B2VXHp9Uvb9fST/rC1pMEmn2zkAaHyeztjFCc2Ru7kZ6vCYByye95QQ0G6/4czl0wP2",
	"pQXsS4hX7SpG5LoYQ8cMctQxmkIJJ23a25bQLHMPWyrFI5+Nk2BofhDNNOkm7lc3kURLsJ4VqxWDaEpw",
	"AXSHk/iqpQA/ZOLn5CnhSx+c3eRGv3oejaWblBN3qpzoyGw1xpZfSWIIx94iUYpRHXca2NBkzQXrnOpm",
	"vW1MYA/acbEXs28xxdbFzK3HpTTgusrqwTa52bosBJDEoC5aVrlADskpLJMkGVUYFug9Wd1m4RpfFpby",
	"MEyHIK+ZUjxlhMf9GnQ/ifMRlCXwyBtIqnJALmZnyNRczIhU4U7v/dpYbn+PinTPgXSQ5Md0VG7jjkyU",
	"N6C6dLEHoWmIbj9T9QZ1c1QYrVmWrJpegsmqNFmVoEcDeXYzLDU7361tqTF63BU50qjuj9xoMHGBn95C",
	"FTuSUarV5lMwGaq+VENVjCwN4X7LTbn29jsVTDcLsIzXxD/36jJys5Y6KHvp8H0J3pdymCHC8cdstqS9",
	"45Iph3UvW5mTd3Y33jGTcK+1w93qQ9OT/KWWeLQE7g3VaKrwiDEyEcwupol384H7dAvzU7kBd/cWcL58",
	"w/5L+rzOPon9jxJ9RhtrsDD5VYowb4B2bmQw2/Hh60MfN3l4+vJw/8c3R4fnx29e+7yi9sc6D4yZ+OxJ",
	"S0VkwqjAN8T3LMvOQc05qgxPiowqork9CW7W3NmJqGJ0DiK7C2EkhxumeEL3X7Ob//5Pqa7m5GVh79/+",
	"CVXcO/QVgm4u+aqQhSZf7SVrqmgCpUT8XjHLpy5r2D2+mH336vxiNicXs7fnRxezJ1HyhHrqs2TNUuea",
	"3jQKVC+2dq186RppjzEhqbwRmaSuAlvqrpsOk2EavvFfpSstQFxBwAgvMaiqPlL1CmLAaynznaIJCysx",
	"j9W5m+By9b6dvl2LRseJUsAS1bd43cUrfcdNSHLj2ag6ENUP+u4DJkYuFDdbe7IbnPSSUcXUYYGuBPjX",
	"t54e/J9/nls+ElrPDtzXakoIbP1gB7b467OO0gSOim0oz2YHM8Po5n8vM75am8RkCy591hYkVd/CF8jD",
	"qWRGzhndzJzWdOZf5lrvVr6mn+tDvHsc6/bEMSmuOi+aDpKMKgxCDgr4yiW+SkB3WLqqyi+7DJBcQT0+",
	"e7k15hDOeMIEqu/dzg5zmqwZeb542trMzc3NgsLnhVSrfddX7/94fPTy9dnLveeLp4u12WR4BQ1EMzeA",
	"dHhyPJtX12V2/Yxm+Zo+c8kBBc357GD21eLp4pnzGoCjtozK/vWzfVqY9X5Sqr9Xscf5O2agDhWmFPXJ",
	"/ysTx6JMycelOE7tlgvjtc+QIgqSc8K8z58+9XeDYWLQoKbA/v84VRWi02BFgWoWuHiNZCI/WBD8+dnf",
	"7my+UvJq5xsuwNulKrPLUrRS0BUEPtShh/hXOwFXDId1nsFProGVdBpnAflZ42fge8HJV2npf47W9IuM",
	"akUkvzRgVmzjNaMpYL6/34VZS+VTeswDYDap0bt7vAzdh3MOO4FtwI14kEm/oSnxMSEw6bMH2ykX1V4/",
	"3e2fz/7yIID29SScvEheKiXVaORLquAejcE9XnTsxESQrzuDguqeanWMtD07O+ohHIVEeo4zKhtaBMVM",
	"8N5NDkoxlUKyq8sXJNt2PAOMYAeAHJqYF9U0Gz3y2aUfufzATvlfOtPUky97AgELquhDmX28jzTMY+kk",
	"XQpcjFowiiemypkMPrguKbbPCorZIrlyNQDqtamgwlSZuT620KyWjf/hVoseQ3PPmkOKZ5fh1oL4ipFH",
	"Xz+ak0df2/+FQtL/9vUj8pgtVos5ljF4hnUMns2v2Pb5v+Efzx1DH9spzHi7nYbFuMNc2Xjxyk2GGbyr",
	"7NznVbZ0yNqCqaG7L1qtO+HL+i2HNDA4aCMN+oZuMQN2s9p3hTgQIhMkHgcIdd4MvoHsLRWcBg2m9/rY",
	"dVIRUN92M0Nf7tP3VlDHhjD3yn/1ALN+K9UlT1Mm8L17iCnPnNTyVpT209pr1/miQShiLmPq/SOsckVH",
	"PGvtVw0790XJugV8I9Pt/WMAwqySeo0q2IcWKj57qIXEAJ1OuHjfuPjnp39/gCmt8Jlx1OT8/rF/FNu7",
	"/5t98j4gjciYiSj88Pc6tSDu7pMK6+tU4gV06qMSgwJqGMUxTKgsH4YrLR91Vyzevemu9FSdUvz+pFf/",
	"cv9hEPfPDzDla2nIt7IQ6efybkclUcUolqGpWNykB8HqCPkdMw+MjSt0Nfx4VJzPMOmzq74BL/ynYbcn",
	"hJ0QtoPRpiaJV4hM1rdktKHvA+NsXtbruasHdKwosAdT/8dup1nLOjxKEPjERGKSAb4oyjSJHVFaWESZ",
	"F0iI3eBfjkbzL6fY/4HpIXoufBKC+GC6kU9KEifVzESWJ7L8O9MG7dM8V9JlbYtS80NogNlFmNj2cbht",
	"xhY9zDo7HPrJ74yiYzHMcMETRZ+Y3ImaTtT0Dqip8xDs9x9Bb/IhZ5EXbqjJM2TyDJk8Q74Yz5DIHXEJ",
	"NMgyoyt7T1zRY0ywZlez2VC1rUeP6AX5p90JgEoSYE18hiEEC0CylqsNMN8NFsRZuBACADikIHqEt6l2",
	"7x9VMGqGEkBR8UduYDvUI8iMo4pO1A/axm5ZmVDkXvX6SF8nn5k/us8M4tMYB5nGu93lDVPmgL8PYcAN",
	"/sB+LuGsk+Zkcmr5FOjZ5rJHuKu88O4qg7iLLUvc3UnZ0Bh88j6ZpOnPyZgdvIDdIWDDGPQdM3eGPnfm",
	"LvIQPOSEOxPuDHt9DOIPNLwzDJqcN+4QiyfGdlJif0m8dIdbBtrixtAq54BxZ9Tqs3Ct2EX2fjjqNMn5",
	"EzmcyOH9qBb2UwZVInSZpyVGNsvEN5V6HlUAQd+2uqH6eIdKh2rQz4KWhlCYuL6JzP2RBMZuoqOYSBng",
	"QE9OHrT1YcMgo1xLJXPq2tylaiY2uTeoVjVM74oCzTuL7FwJeSPKhfzk88HFjY7Q+LTedvZ7VRw9R/Ro",
	"3mZI/GQnn0jFxBF9GuJUpS3uJU1hxsbxmuMzn7180h9P+uNJfxzoj3fGqUCbfGdYNemUJ+liIiefCznp",
	"0fDuTE1q+t47oyeT1neiHxP9mESOpsjBhJJZtmHCjEhOXDWuOTXHhIyXZdMyP/FoEkZHBglj2AWkQBeE",
	"a13UE7NAoaxcyWuesnQeZvB2DttrllwRPhTE5vy6dXwS8N8GX3muSUI1K13KudfdOH/8JkSgOgbNMlfW",
	"z/adu4IbJZTDidAtH1Z+ybDkV2e8h1afTN3SOviJrk582UNSuQp9omFjrc8DEWTVfR6ZebjVYYorm+LK",
	"priyKePwjs/nlGl4iprqfNCGAqhEz7vVFUzV6nFPcVXteR44xKpjAZMX1hRt9XvmU3eIwdoN/bFXDP13",
	"0jp2TzlFaU0i5OcuQvYFbO2GbjXt2L3g2mdikh/1Dk8490fGuf5Ar93wDjrdM+ZNZvv7wf6JAZ8scF8o",
	"zz8QILYbjXPOA/dM5T4LZ4Jbqhk+CYGbtBsTcZ2I6ydSqNwi626EKEcKA2Ove6DFn11e3dYWylzDn5om",
	"+4UMK30mKjlJvb8fmrV7bMjHK6lu54w6qaompP3Dq6o+Chfjiqv7wMZJfTWpryYyNElYd6a++ii616XM",
	"ug/KN6m0JjZoYoPuVHa5tvN0SiinzCjOrpkmtHSkxS6LCxF3rMYBh5yp/zD+umdSGSJVyhTEwLiKBOA/",
	"azfEN0wbusnrvtKP7BiPyGPBbiwJXHKlTefiYPDaolIcCqqT62Q2nzFRbOxloPAX/PhufltfYzx/PDd7",
	"RN5ZeMgP/W6KQ3zRXvj3KhzbY5v8lP/wfsr2GtTfgGXG2FCAzbe2zVBQzbc40BRIMwXSTIE0X26BpmMX",
	"O9tViclvGuhK10po6jKw6TMc5NMVPgKyNb2Mf/SXEa7rmLJH9bewK1AHWt1TcA6O/cABOcGkk5vKFITz",
	"CTCzxbPu/wb//bBv2CbPqLGskeZSdDOz8BD71qRsHuNmz12rn6pGg6pMKBfon8PWNB2Ky2VAKW6ZAXTi",
	"qSeeeuKpp+B0S2cbdGtibCfGdtfnc0QQa+oLCTZfuY7A1cat/OjH9P7e0qZJcuTMU3TsZPdLf4/SbJQP",
	"VoymyASWL+AgIn/HzITFD4nFTWhP6PyHR+fIGz6+5u+Q4gobesXVTn479aGnVBITdn1BjyXW+x3Cnu+Y",
	"uSPUuUN3+z+G8WbC3Ql3B+sND+EvtLsjDJ5c9O8OgScF1eSW/wUZsYZKDQ+RKedvf0eE6rPwqN/B3P1g",
	"dGmyrE90cKKD96DJGAqaBs1lFa1U12F6qhiXzG4XknSv8tkkGk2i0acWjZrFr8YLSneFUJO4NIlLEyX5",
	"PChJEX2TQSbZ8VkOJZm7oiSTPDNxAxMOj2W80RVyVPRvyrXhIjGlyyL2LYNaK2Sv0HGbs64w4R9x5hH4",
	"bkdxXoQlliu3sHIRSm46y9xzkfYivQ+OdRUmxwTGHpIlz5yHbXMtUmRb9LEto+WIWdPQj3bFr5nA9qVr",
	"6L34nd7BKtHlcmiVd+4zWl03XO+DRBvfThhj7+kmz7AHrvYl/gJI7exjBzP3Y+WxajEn82gArqkYr3/N",
	"lRQbJszXuZJpkRh0tFFsxaX4utB7jGqz98xugDP19SVNrphIEbHH0RBAvskv9I/uFwqXr/4gKJZLzY1U",
	"nA0EBJ/6ltuhqODTcMwpNniKY5jiGKY4hhGEraIw01P1R3+qyndpOyZAN/I2dUXpVk3vKVQ3mOCB43Wb",
	"M0+mxSlo91OhbAeLuYvz8iikxtY1pN5JoRiZZPJlntR8n5Oar/FU9jg0j8Ko75i5c3T6TOzn/Q/ohE9/",
	"SHwacDIehVPOfnzHWDUZ0e8YsyeueHK4+9IY8SHv41H0yxnu75yCfRbG+10F+oelWpMCYSKVE6m8e52F",
	"s3BtRTJoF8OmZ1uRDFvGqraTaWwyjU2msck0NvJlrgjHZBybjGPV6zTOPBZ5oroNZFXjezORBVM8uJGs",
	"OffE5U5msk+HvF1M526WslH47W1lNfzeUYyPTDTZyyYp8/PS7zdez16L2SjMApvZPaDVZ2M3639TJ8z6",
	"g2LWoO1sFHY5w9E94NdkQbtzHJ9Y5kkx/OVx6cNWtFGUrLSj3QMt+0xsabtK/g9NwSZdw0Q4J8J5H+qN",
	"QjOl9zdsX6oVFfxXWNdulYhrPQkldkjC7b82zFkm4oa3t5qpN7Vp75HQhBP1Kes/zINoUbAlysYSPVDD",
	"30OgujThXSC0Mqx25xVkQW/JrlVy93uDyYiM5n9QZb4/xHfQF41lyAgUKpsdzPZn9jF2rZsn/MYfJcbl",
	"W0LLhHFbWAT5e2sfZm0rXzCQFOSIKcOXtjU74yvBxapZnF8HgydVa42tVfnG9M+DEfjRQTE78eAIrdL3",
	"0cHaNdF7x7WgdPHzXKx8/fNgOCipO7S0SAXdWrWDXZbgguJpoqTWJOXLJVNMxEfHKN+h1XWF87pBAseI",
	"4ZG6HCDKsYInYcSuE8Zh0xHS5Ub0OPPh3Yf/PwAA///IYpQT4iQCAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
