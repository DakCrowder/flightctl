// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
