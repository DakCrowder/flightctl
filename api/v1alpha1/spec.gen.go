// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
