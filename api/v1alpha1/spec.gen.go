// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"m9nPhUij/Wg3uvpw9f8CAAD//9fg/FE8lQEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
