// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"//+9YjGocusBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
