// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
