// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
