// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAD//1vX/+5fBAIA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
