// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"OEAU7YgOGz+8+/B/AwAA///Mw1uzVyMCAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
