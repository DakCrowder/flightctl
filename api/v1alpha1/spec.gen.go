// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"ThiHTUdIlxvR48yHdx/+/wAAAP//6JqtSFYkAgA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
